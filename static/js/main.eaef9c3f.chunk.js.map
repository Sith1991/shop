{"version":3,"sources":["store/action-types.js","store/store.js","store/reducers/products-reducer.js","store/reducers/properties-reducer.js","store/reducers/product-card-reducer.js","store/reducers/notifications-reducer.js","store/reducers/is-auth-reducer.js","pages/error-indicator/error-indicator.js","components/error-boundary/error-boundary.js","components/universal-table-pagination/universal-table-pagination.js","components/spinner/spinner.js","components/product-list-table/product-list-table.js","components/product-list-table/product-list-table-header.js","components/search-panel/search-panel.js","services/firebase-service.js","store/actions/is-auth-actions.js","store/actions/notifications-actions.js","store/actions/propduct-card-actions.js","store/actions/propducts-actions.js","store/actions/properties-actions.js","hoc/with-auth-redirect.js","components/product-list/product-list.js","components/property-list-table/property-list-table.js","components/property-list-table/property-list-table-header.js","components/property-list/property-list.js","pages/main/main.js","pages/main/main-container.js","components/error-message-text/error-message-text.js","pages/login/login-validation-shema.js","styles/customizing-material-ui-components/add-item-input-style.js","styles/customizing-material-ui-components/add-item-label-style.js","styles/customizing-material-ui-components/add-item-select-style.js","styles/customizing-material-ui-components/add-item-textarea-style.js","styles/customizing-material-ui-components/add-prop-input-style.js","styles/customizing-material-ui-components/add-property-radio-style.js","styles/customizing-material-ui-components/button-add-property-style.js","styles/customizing-material-ui-components/button-login-style.js","styles/customizing-material-ui-components/button-registration-style.js","styles/customizing-material-ui-components/button-save-style.js","styles/customizing-material-ui-components/button-upload-style.js","styles/customizing-material-ui-components/product-card-item-select-style.js","styles/customizing-material-ui-components/theme.js","styles/customizing-material-ui-components/theme-upload-btn.js","styles/customizing-material-ui-components/use-form-helper-text-style.js","components/form-helper-text/form-helper-text-styled.js","pages/login/login.js","pages/login/login-container.js","pages/registration/registration-validation-shema.js","pages/registration/registration.js","pages/registration/registration-container.js","svg/Ellipse.svg","components/styled-radio-icon/styled-radio-button.js","pages/add-property/add-property-validation-shema.js","pages/add-property/add-property.js","pages/add-property/add-property-container.js","components/thumb/thumb.js","components/price-format-input/price-format-input.js","components/add-property-to-product/add-property-to-product.js","pages/add-item/add-item-validation-schema.js","pages/add-item/add-item.js","pages/add-item/add-item-container.js","pages/product-card/product-card-validation-shema.js","pages/product-card/product-card.js","pages/product-card/product-card-container.js","components/app/app.js","components/app/app-container.js","components/notifications/notifications.js","components/notifications/notifications-container.js","index.js"],"names":["FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_SPINNER_OPEN","FETCH_PRODUCTS_SPINNER_CLOSE","FETCH_PRODUCTS_FAILURE","FETCH_SELECTED_PRODUCT_SUCCESS","FETCH_SELECTED_PRODUCT_REQUEST","FETCH_SELECTED_PRODUCT_FAILURE","CLEAR_SELECTED_PRODUCT","FETCH_PROPERTIES_SUCCESS","FETCH_PROPERTIES_SPINNER_OPEN","FETCH_PROPERTIES_SPINNER_CLOSE","FETCH_PROPERTIES_FAILURE","NOTIFICATION_CREATED_PRODUCT","NOTIFICATION_EDITED_PRODUCT","NOTIFICATION_DELETED_PRODUCT","NOTIFICATION_CREATED_PROPERTY","NOTIFICATION_DELETED_PROPERTY","NOTIFICATION_GO_TO_CLOSE","NOTIFICATION_STATUS_RESET","USER_IS_LOGGED_IN","USER_IS_LOGGED_OUT","USER_IS_LOGGED_REQUEST","reducers","combineReducers","products","state","action","undefined","loading","error","type","payload","properties","selectedProduct","notifications","showNotification","path","isEditing","deletedItem","isAuth","logIn","email","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ErrorIndicator","className","to","ErrorBoundary","hasError","errorInfo","this","setState","props","children","Component","UniversalTablePagination","array","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage","setPage","correctPage","useCallback","Math","ceil","length","useEffect","useStyles","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePagination","rowsPerPageOptions","label","value","count","SelectProps","inputProps","native","onChangePage","onChangeRowsPerPage","ActionsComponent","classes","useTheme","IconButton","onClick","event","disabled","direction","max","Spinner","backdrop","zIndex","drawer","color","Backdrop","open","CircularProgress","ProductListTable","onDeleted","productsError","deletedProduct","createMuiTheme","palette","primary","main","ruRU","useState","setRowsPerPage","emptyRows","min","descendingComparator","a","b","orderBy","getComparator","order","stableSort","comparator","stabilizedThis","map","el","index","sort","setOrder","setOrderBy","ThemeProvider","TableContainer","Table","onRequestSort","property","TableBody","TableRow","slice","product","id","itemName","price","dateOfChange","formattedPrice","toLocaleString","formattedDateOfChange","timestamp","d","Date","setTime","getDate","getMonth","getFullYear","toString","substr","timestampToDate","TableCell","align","style","height","colSpan","TableFooter","newPage","parseInt","target","ProductListTableHeader","visuallyHidden","border","clip","margin","overflow","padding","position","top","width","TableHead","headCell","sortDirection","TableSortLabel","active","IconComponent","ExpandMoreIcon","SearchPanel","onSearchChange","e","termSetup","onColumnChange","columnChange","TextField","size","variant","onChange","InputProps","startAdornment","InputAdornment","FormControl","InputLabel","Select","defaultValue","MenuItem","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getItems","dispatch","items","itemsLoaded","db","database","dbDataRef","ref","child","on","snap","data","val","deleteItem","key","itemError","set","getSelectedProduct","selectedProductLoaded","itemId","userLogOut","auth","signOut","then","catch","postItemsToDatabase","newValues","itemSpinnerClose","notificationItem","push","putItemsToDatabase","getDateOfChange","ServerValue","TIMESTAMP","userIsAuth","userIsAuthRequest","userIsLoggedIn","userIsNotLoggedIn","onAuthStateChanged","firebaseUser","getUserAuth","resetNotifications","objectsToArray","Object","values","getKeysToArray","keys","i","find","selectedProductError","Error","clearSelectedProduct","fetchSelectedProduct","productsLoaded","newItems","productsSpinnerOpen","fetchProducts","propertiesLoaded","propertiesSpinnerOpen","propertiesError","fetchProperties","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","React","connect","ProductList","term","columnName","searchItems","arr","filter","toLowerCase","indexOf","visibleItems","Button","mapDispatchToProps","PropertyListTable","deletedProperty","propertyName","propertyType","PropertyListTableHeader","Main","pathname","history","location","component","exact","PropertyList","ErrorMessageText","message","loginValidationSchema","yup","shape","typeError","required","password","useAddItemInputStyles","maxWidth","input","useAddItemLabelStyles","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","opacity","letterSpacing","useAddItemSelectStyles","formControl","paddingTop","paddingBottom","icon","useAddItemTextareaStyles","useAddPropInputStyles","marginRight","usePropertyLabelStyles","useAddPropertyButtonStyles","useLoginButtonStyles","background","borderRadius","textTransform","useRegistrationButtonStyles","useSaveButtonStyles","boxShadow","useUploadButtonStyles","minHeight","justifyContent","useProductCardItemSelectStyles","typography","button","themeUploadBtn","useFormHelperTextStyle","bottom","FormHelperTextStyled","FormHelperText","withRouter","errorMessage","setErrorMessage","formik","useFormik","initialValues","showPassword","validationSchema","onSubmit","signInWithEmailAndPassword","submitLogIn","console","log","validateOnBlur","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","setFieldValue","Tooltip","title","fullWidth","Boolean","FormLabel","OutlinedInput","notched","placeholder","name","onBlur","endAdornment","edge","registrationValidationSchema","secondName","confirmPassword","oneOf","showConfirmPassword","createUserWithEmailAndPassword","submitRegistration","StyledRadio","backgroundColor","backgroundImage","outline","outlineOffset","checkedIcon","image","backgroundRepeat","backgroundPosition","Radio","disableRipple","clsx","addPropertyValidationSchema","test","validateNames","trim","AddProperty","createdProperty","propertiesSpinnerClose","classesLabel","classesInput","classesSaveBtn","classesRadioButtons","getError","trimmedPropertyName","multiline","focused","RadioGroup","FormControlLabel","control","Thumb","file","thumb","setThumb","reader","FileReader","onloadend","result","readAsDataURL","src","alt","PriceFormatInput","AddPropertyToProduct","memo","setFieldTouched","propertiesOfProduct","handleTrim","classesSelect","classesButton","lastProperties","setLastProperties","propertiesWithEditing","x","some","y","removeSelectedProperties","lastProps","item","pushSelectedProperties","selectedProperty","renderMenuItems","selectedWithLastProperties","propName","addItems","newItem","propertyValue","Array","isArray","removeItem","newValue","_","addValueToProps","nameOfFieldArray","selectedPropValue","removeValueFromProps","errorConditionDropdown","idx","renderValueInputs","selectedProp","errorConditionNumber","errorConditionString","propertyOfProduct","addItemValidationSchema","integer","charAt","when","is","nullable","otherwise","fileUrl","description","of","AddItem","editingProduct","createdProduct","editedProduct","productsSpinnerClose","setImage","classesUploadBtn","classesTextarea","priceFormat","replace","createUniqueProperties","allProperties","uniqueResultTwo","obj","obj2","concat","itemProperties","useMemo","getFileSchema","fileHandleChange","files","numberedPrice","String","fileNameWithRndNumber","floor","random","uploadTask","put","snapshot","getDownloadURL","url","trimValue","customInput","format","accept","multiple","htmlFor","endIcon","rows","maxLength","loadingProps","errorProps","loadingProducts","errorProducts","loadingEditingProduct","errorEditingProduct","match","params","loadIndicator","productCardValidationSchema","ProductCard","Promise","r","setTimeout","setFirstValuesFromDropDowns","App","MainContainer","AddPropertyContainer","ProductCardContainer","AddItemContainer","LoginContainer","RegistrationContainer","render","Alert","elevation","closeNotifications","handleClose","reason","dontBack","backToListItems","Snackbar","autoHideDuration","onClose","severity","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eaef9c3f.chunk.js","sourcesContent":["export const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\nexport const FETCH_PRODUCTS_SPINNER_OPEN = 'FETCH_PRODUCTS_SPINNER_OPEN';\nexport const FETCH_PRODUCTS_SPINNER_CLOSE = 'FETCH_PRODUCTS_SPINNER_CLOSE';\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\n\nexport const FETCH_SELECTED_PRODUCT_SUCCESS = 'FETCH_SELECTED_PRODUCT_SUCCESS';\nexport const FETCH_SELECTED_PRODUCT_REQUEST = 'FETCH_SELECTED_PRODUCT_REQUEST';\nexport const FETCH_SELECTED_PRODUCT_FAILURE = 'FETCH_SELECTED_PRODUCT_FAILURE';\nexport const CLEAR_SELECTED_PRODUCT = 'CLEAR_SELECTED_PRODUCT';\n\nexport const FETCH_PROPERTIES_SUCCESS = 'FETCH_PROPERTIES_SUCCESS';\nexport const FETCH_PROPERTIES_SPINNER_OPEN = 'FETCH_PROPERTIES_SPINNER_OPEN';\nexport const FETCH_PROPERTIES_SPINNER_CLOSE = 'FETCH_PROPERTIES_SPINNER_CLOSE';\nexport const FETCH_PROPERTIES_FAILURE = 'FETCH_PROPERTIES_FAILURE';\n\nexport const NOTIFICATION_CREATED_PRODUCT = 'NOTIFICATION_CREATED_PRODUCT';\nexport const NOTIFICATION_EDITED_PRODUCT = 'NOTIFICATION_EDITED_PRODUCT';\nexport const NOTIFICATION_DELETED_PRODUCT = 'NOTIFICATION_DELETED_PRODUCT';\nexport const NOTIFICATION_CREATED_PROPERTY = 'NOTIFICATION_CREATED_PROPERTY';\nexport const NOTIFICATION_DELETED_PROPERTY = 'NOTIFICATION_DELETED_PROPERTY';\nexport const NOTIFICATION_GO_TO_CLOSE = 'NOTIFICATION_GO_TO_CLOSE';\nexport const NOTIFICATION_STATUS_RESET = 'NOTIFICATION_STATUS_RESET';\n\nexport const USER_IS_LOGGED_IN = 'USER_IS_LOGGED_IN';\nexport const USER_IS_LOGGED_OUT = 'USER_IS_LOGGED_OUT';\nexport const USER_IS_LOGGED_REQUEST = 'USER_IS_LOGGED_REQUEST';","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport {\n  productsReducer,\n  propertiesReducer,\n  productCardReducer,\n  notificationsReducer,\n  isAuthReducer,\n} from './reducers';\nimport thunk from 'redux-thunk';\n\nconst reducers = combineReducers({\n  products: productsReducer,\n  properties: propertiesReducer,\n  selectedProduct: productCardReducer,\n  notifications: notificationsReducer,\n  isAuth: isAuthReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import {\n  FETCH_PRODUCTS_FAILURE,\n  FETCH_PRODUCTS_SPINNER_CLOSE,\n  FETCH_PRODUCTS_SPINNER_OPEN,\n  FETCH_PRODUCTS_SUCCESS,\n} from '../action-types';\n\nconst productsReducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      products: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case FETCH_PRODUCTS_SPINNER_OPEN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case FETCH_PRODUCTS_SPINNER_CLOSE:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        products: action.payload,\n        loading: false,\n        error: null,\n      };\n    case FETCH_PRODUCTS_FAILURE:\n      return {\n        ...state,\n        products: [],\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { productsReducer };","import {\n  FETCH_PROPERTIES_FAILURE,\n  FETCH_PROPERTIES_SPINNER_CLOSE,\n  FETCH_PROPERTIES_SPINNER_OPEN,\n  FETCH_PROPERTIES_SUCCESS,\n} from '../action-types';\n\nconst propertiesReducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      properties: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case FETCH_PROPERTIES_SUCCESS:\n      return {\n        properties: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case FETCH_PROPERTIES_SPINNER_OPEN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_PROPERTIES_SPINNER_CLOSE:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n\n    case FETCH_PROPERTIES_FAILURE:\n      return {\n        properties: [],\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { propertiesReducer };","import {\n  CLEAR_SELECTED_PRODUCT,\n  FETCH_SELECTED_PRODUCT_FAILURE,\n  FETCH_SELECTED_PRODUCT_REQUEST,\n  FETCH_SELECTED_PRODUCT_SUCCESS,\n} from '../action-types';\n\nconst productCardReducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      selectedProduct: {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case FETCH_SELECTED_PRODUCT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_SELECTED_PRODUCT_SUCCESS:\n      return {\n        selectedProduct: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case FETCH_SELECTED_PRODUCT_FAILURE:\n      return {\n        selectedProduct: {},\n        loading: false,\n        error: action.payload,\n      };\n\n    case CLEAR_SELECTED_PRODUCT:\n      return {\n        selectedProduct: {},\n        loading: true,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { productCardReducer };","import {\n  NOTIFICATION_CREATED_PRODUCT,\n  NOTIFICATION_CREATED_PROPERTY,\n  NOTIFICATION_DELETED_PRODUCT,\n  NOTIFICATION_DELETED_PROPERTY,\n  NOTIFICATION_EDITED_PRODUCT,\n  NOTIFICATION_GO_TO_CLOSE,\n  NOTIFICATION_STATUS_RESET,\n} from '../action-types';\n\nconst notificationsReducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      showNotification: false,\n      path: null,\n      isEditing: false,\n      deletedItem: null,\n    };\n  }\n\n  switch (action.type) {\n    case NOTIFICATION_CREATED_PRODUCT:\n      return {\n        showNotification: true,\n        path: action.payload,\n        isEditing: false,\n        deletedItem: null,\n      };\n\n    case NOTIFICATION_EDITED_PRODUCT:\n      return {\n        showNotification: true,\n        path: action.payload,\n        isEditing: true,\n        deletedItem: null,\n      };\n\n    case NOTIFICATION_DELETED_PRODUCT:\n      return {\n        showNotification: true,\n        path: action.payload,\n        isEditing: false,\n        deletedItem: 'товар',\n      };\n\n    case NOTIFICATION_CREATED_PROPERTY:\n      return {\n        showNotification: true,\n        path: action.payload,\n        isEditing: false,\n        deletedItem: null,\n      };\n\n    case NOTIFICATION_DELETED_PROPERTY:\n      return {\n        showNotification: true,\n        path: action.payload,\n        isEditing: false,\n        deletedItem: 'свойство',\n      };\n\n    case NOTIFICATION_GO_TO_CLOSE:\n      return {\n        ...state,\n        showNotification: false,\n      };\n\n    case NOTIFICATION_STATUS_RESET:\n      return {\n        showNotification: false,\n        path: null,\n        isEditing: false,\n        deletedItem: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { notificationsReducer };","import { USER_IS_LOGGED_IN, USER_IS_LOGGED_OUT, USER_IS_LOGGED_REQUEST } from '../action-types';\n\nconst isAuthReducer = (state, action) => {\n  if (state === undefined) {\n    return {\n      logIn: false,\n      email: null,\n      loading: true,\n    };\n  }\n\n  switch (action.type) {\n    case USER_IS_LOGGED_IN:\n      return {\n        logIn: true,\n        email: action.payload,\n        loading: false,\n      };\n\n    case USER_IS_LOGGED_OUT:\n      return {\n        logIn: false,\n        email: null,\n        loading: false,\n      };\n\n    case USER_IS_LOGGED_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { isAuthReducer };","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './error-indicator.scss';\n\nconst ErrorIndicator = () => {\n  return (\n    <div className={'error-indicator'}>\n      <div className={'error-indicator-wrap'}>\n        <div className={'error-indicator-big-text'}>Error!</div>\n        <div className={'error-indicator-big-text'}>Страница не найдена</div>\n        <div className={'error-indicator-low-text'}>Страница устарела, была удалена или не существовала вовсе</div>\n        <div className={'back-to-home'}>\n          <Link to={'/'}>Вернуться на главную</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ErrorIndicator };\n","import React, { Component } from 'react';\n\nimport { ErrorIndicator } from '../../pages/error-indicator';\n\nexport class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\n\nconst UniversalTablePagination = (props) => {\n  const { array, rowsPerPage, page, handleChangePage, handleChangeRowsPerPage, setPage } = props;\n\n  const correctPage = useCallback(() => {\n    return page <= Math.ceil(array.length / rowsPerPage) - 1 ? setPage(page) : setPage(0);\n  }, [array, rowsPerPage, page, setPage]);\n\n  useEffect(() => {\n    correctPage();\n  }, [array, correctPage]);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n  function TablePaginationActions(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n      onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n      onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n      onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n      <div className={classes.root}>\n        <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n\n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\n  return (\n    <TablePagination\n      rowsPerPageOptions={[5, 10, 25, { label: 'Все', value: -1 }]}\n      count={array.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      SelectProps={{\n        inputProps: { 'aria-label': 'rows per page' },\n        native: true,\n      }}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n      ActionsComponent={TablePaginationActions}\n    />\n  );\n};\n\nexport {UniversalTablePagination};","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './spinner.scss';\n\nconst Spinner = () => {\n  const useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport { Spinner };\n","import React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TableRow } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ruRU } from '@material-ui/core/locale';\nimport { UniversalTablePagination } from '../universal-table-pagination';\nimport { ProductListTableHeader } from './index';\nimport { Spinner } from '../spinner';\n\nimport './product-list-table.scss';\n\nconst ProductListTable = ({ products, onDeleted, loading, productsError, deletedProduct }) => {\n  // russian localization\n  const theme = createMuiTheme(\n    {\n      palette: {\n        primary: { main: '#1976d2' },\n      },\n    },\n    ruRU,\n  );\n\n  //\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, products.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  //\n\n  //\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  //\n\n  const timestampToDate = (timestamp) => {\n    const d = new Date();\n    d.setTime(timestamp);\n    return (\n      ('0' + d.getDate()).slice(-2) +\n      '.' +\n      ('0' + (d.getMonth() + 1)).slice(-2) +\n      '.' +\n      d.getFullYear().toString().substr(-2)\n    );\n  };\n\n  return (\n    <div className={'product-list-table'}>\n      <ThemeProvider theme={theme}>\n        <TableContainer>\n          <Table>\n            <ProductListTableHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n            {loading ? (\n              <TableBody>\n                <TableRow>\n                  <th>\n                    <Spinner />\n                  </th>\n                </TableRow>\n              </TableBody>\n            ) : (\n              <TableBody>\n                {(rowsPerPage > 0\n                  ? stableSort(products, getComparator(order, orderBy)).slice(\n                      page * rowsPerPage,\n                      page * rowsPerPage + rowsPerPage,\n                    )\n                  : stableSort(products, getComparator(order, orderBy))\n                ).map((product) => {\n                  const { id, itemName, price, dateOfChange } = product;\n                  const formattedPrice = price.toLocaleString('ru-RU');\n                  const formattedDateOfChange = timestampToDate(dateOfChange);\n                  return (\n                    <TableRow key={id}>\n                      <TableCell align={'center'} className={'link table-body'}>\n                        <Link to={`/item-card/${id}`}>\n                          <div className={'table-value'}>{itemName}</div>\n                        </Link>\n                      </TableCell>\n                      <TableCell className={'table-body'}>\n                        <div className={'table-value'}>{formattedPrice} $</div>\n                      </TableCell>\n                      <TableCell className={'table-body'}>\n                        <div className={'table-value'}>{formattedDateOfChange}</div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"links\">\n                          <Link to={`/add-item/${id}`} className={'link'}>\n                            Ред.\n                          </Link>\n                          <Link\n                            to={'#'}\n                            onClick={() => onDeleted(id, 'products', productsError, deletedProduct)}\n                            className={'link'}\n                          >\n                            Удалить\n                          </Link>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 47 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            )}\n            <TableFooter>\n              <TableRow>\n                <UniversalTablePagination\n                  array={products}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  handleChangePage={handleChangePage}\n                  handleChangeRowsPerPage={handleChangeRowsPerPage}\n                  setPage={setPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport {ProductListTable};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './product-list-table.scss';\n\nconst ProductListTableHeader = (props) => {\n  const { order, orderBy, onRequestSort } = props;\n\n  const headCells = [\n    { id: 'itemName', label: 'Перечень товаров' },\n    { id: 'price', label: 'Стоимость' },\n    { id: 'dateOfChange', label: 'Дата изменения' },\n  ];\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  ProductListTableHeader.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string,\n  };\n\n  const useStyles = makeStyles(() => ({\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n            id={`${headCell.id}`}\n            align={headCell.id === 'itemName' ? 'center' : 'left'}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              IconComponent={ExpandMoreIcon}\n            >\n              <div className={'table-header'}>{headCell.label}</div>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell key={'administration'} id={'administration'}>\n          <div className={'table-header'}>Управление</div>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport { ProductListTableHeader };\n","import React, { Component } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport './search-panel.scss';\n\nexport class SearchPanel extends Component {\n  onSearchChange = (e) => {\n    this.props.termSetup(e.target.value);\n  };\n\n  onColumnChange = (e) => {\n    this.props.columnChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <div className={'search-panel'}>\n        <TextField\n          className={'input'}\n          size=\"small\"\n          label=\"Поиск\"\n          type=\"search\"\n          variant=\"outlined\"\n          onChange={this.onSearchChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <FormControl className={'select'} variant=\"outlined\" size=\"small\">\n          <InputLabel>Категория</InputLabel>\n          <Select label={'Категория'} defaultValue={'itemName'} onChange={this.onColumnChange}>\n            <MenuItem value={'itemName'}>Перечень товаров</MenuItem>\n            <MenuItem value={'price'}>Стоимость</MenuItem>\n            <MenuItem value={'dateOfChange'}>Дата изменения</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBqzyhjRSQnQiJdwh2_P2W-wS6XMhowBuI',\n  authDomain: 'shop-app-firebase.firebaseapp.com',\n  databaseURL: 'https://shop-app-firebase-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'shop-app-firebase',\n  storageBucket: 'shop-app-firebase.appspot.com',\n  messagingSenderId: '159676401640',\n  appId: '1:159676401640:web:ef06138de6d79548f6065d',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst storage = firebase.storage();\n\nconst getItems = async (dispatch, items, itemsLoaded) => {\n  const db = firebase.database();\n  const dbDataRef = db.ref().child(`${items}`);\n  await dbDataRef.on('value', (snap) => {\n    const data = snap.val();\n    if (data === null) {\n      dispatch(itemsLoaded([]));\n    } else {\n      dispatch(itemsLoaded(data));\n    }\n  });\n};\n\nconst deleteItem = async (key, path, itemError, deletedItem) => {\n  const db = firebase.database();\n  const ref = db.ref(`${path}`);\n  const dbDataRef = ref.child(key);\n  await dbDataRef.set(null, function (error) {\n    if (error) {\n      itemError(error);\n    } else {\n      deletedItem();\n    }\n  });\n};\n\nconst getSelectedProduct = async (dispatch, selectedProductLoaded, itemId) => {\n  const db = firebase.database();\n  const dbDataRef = db.ref().child('products');\n  await dbDataRef.on('value', (snap) => {\n    const data = snap.val();\n    if (data === null) {\n      dispatch(selectedProductLoaded([]));\n    } else {\n      dispatch(selectedProductLoaded(data, itemId));\n    }\n  });\n};\n\nconst getUserAuth = (dispatch, userIsLoggedIn, userIsNotLoggedIn) => {\n  firebase.auth().onAuthStateChanged((firebaseUser) => {\n    if (firebaseUser) {\n      dispatch(userIsLoggedIn(firebaseUser.email));\n    } else {\n      dispatch(userIsNotLoggedIn());\n    }\n  });\n};\n\nconst userLogOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {})\n    .catch(() => {});\n};\n\nconst submitLogIn = (values) => {\n  const { email, password } = values;\n  const auth = firebase.auth();\n  return auth.signInWithEmailAndPassword(email, password);\n};\n\nconst submitRegistration = (values) => {\n  const { email, password } = values;\n  const auth = firebase.auth();\n  return auth.createUserWithEmailAndPassword(email, password);\n};\n\nconst postItemsToDatabase = async (newValues, path, itemError, itemSpinnerClose, notificationItem) => {\n  const db = firebase.database();\n  const ref = db.ref(`${path}`);\n  const dbDataRef = ref.push();\n  await dbDataRef.set(newValues, function (error) {\n    if (error) {\n      itemError(error);\n    } else {\n      itemSpinnerClose();\n      notificationItem();\n    }\n  });\n};\n\nconst putItemsToDatabase = async (newValues, itemId, path, itemError, itemSpinnerClose, notificationItem) => {\n  const db = firebase.database();\n  const ref = db.ref(`${path}`);\n  const dbDataRef = ref.child(itemId);\n  await dbDataRef.set(newValues, function (error) {\n    if (error) {\n      itemError(error);\n    } else {\n      itemSpinnerClose();\n      notificationItem();\n    }\n  });\n};\n\nconst getDateOfChange = () => {\n  return firebase.database.ServerValue.TIMESTAMP;\n};\n\nexport {\n  storage,\n  getItems,\n  deleteItem,\n  getSelectedProduct,\n  getUserAuth,\n  userLogOut,\n  submitLogIn,\n  submitRegistration,\n  postItemsToDatabase,\n  putItemsToDatabase,\n  getDateOfChange,\n};\n","import { USER_IS_LOGGED_IN, USER_IS_LOGGED_OUT, USER_IS_LOGGED_REQUEST } from '../action-types';\nimport { getUserAuth } from '../../services';\n\nconst userIsAuth = () => (dispatch) => {\n  dispatch(userIsAuthRequest());\n  getUserAuth(dispatch, userIsLoggedIn, userIsNotLoggedIn);\n};\n\nconst userIsLoggedIn = (email) => {\n  return {\n    type: USER_IS_LOGGED_IN,\n    payload: email,\n  };\n};\n\nconst userIsNotLoggedIn = () => {\n  return {\n    type: USER_IS_LOGGED_OUT,\n  };\n};\n\nconst userIsAuthRequest = () => {\n  return {\n    type: USER_IS_LOGGED_REQUEST,\n  };\n};\n\nexport { userIsAuth, userIsLoggedIn, userIsNotLoggedIn };","import {\n  NOTIFICATION_CREATED_PRODUCT,\n  NOTIFICATION_CREATED_PROPERTY,\n  NOTIFICATION_DELETED_PRODUCT,\n  NOTIFICATION_DELETED_PROPERTY,\n  NOTIFICATION_EDITED_PRODUCT,\n  NOTIFICATION_GO_TO_CLOSE,\n  NOTIFICATION_STATUS_RESET,\n} from '../action-types';\n\nconst createdProduct = () => {\n  return {\n    type: NOTIFICATION_CREATED_PRODUCT,\n    payload: '/',\n  };\n};\n\nconst editedProduct = () => {\n  return {\n    type: NOTIFICATION_EDITED_PRODUCT,\n    payload: '/',\n  };\n};\n\nconst deletedProduct = () => {\n  return {\n    type: NOTIFICATION_DELETED_PRODUCT,\n    payload: '/',\n  };\n};\n\nconst createdProperty = () => {\n  return {\n    type: NOTIFICATION_CREATED_PROPERTY,\n    payload: '/property-list',\n  };\n};\n\nconst deletedProperty = () => {\n  return {\n    type: NOTIFICATION_DELETED_PROPERTY,\n    payload: '/property-list',\n  };\n};\n\nconst closeNotifications = () => {\n  return {\n    type: NOTIFICATION_GO_TO_CLOSE,\n  };\n};\n\nconst resetNotifications = () => {\n  return {\n    type: NOTIFICATION_STATUS_RESET,\n  };\n};\n\nexport {\n  createdProduct,\n  editedProduct,\n  deletedProduct,\n  createdProperty,\n  deletedProperty,\n  closeNotifications,\n  resetNotifications,\n};\n","import {\n  CLEAR_SELECTED_PRODUCT,\n  FETCH_SELECTED_PRODUCT_FAILURE,\n  FETCH_SELECTED_PRODUCT_REQUEST,\n  FETCH_SELECTED_PRODUCT_SUCCESS,\n} from '../action-types';\nimport { getSelectedProduct } from '../../services';\n\nconst selectedProductLoaded = (products, itemId) => {\n  const objectsToArray = Object.values(products);\n  const getKeysToArray = Object.keys(products);\n  for (let i = 0; i < getKeysToArray.length; i++) {\n    objectsToArray[i].id = getKeysToArray[i];\n  }\n  const product = objectsToArray.find(({ id }) => id === itemId);\n  if (product === undefined) {\n    return selectedProductError(new Error('Some Error'));\n  }\n\n  return {\n    type: FETCH_SELECTED_PRODUCT_SUCCESS,\n    payload: product,\n  };\n};\n\nconst clearSelectedProduct = () => {\n  return {\n    type: CLEAR_SELECTED_PRODUCT,\n  };\n};\n\nconst selectedProductRequested = () => {\n  return {\n    type: FETCH_SELECTED_PRODUCT_REQUEST,\n  };\n};\n\nconst selectedProductError = (error) => {\n  return {\n    type: FETCH_SELECTED_PRODUCT_FAILURE,\n    payload: error,\n  };\n};\n\nconst fetchSelectedProduct = (itemId) => (dispatch) => {\n  dispatch(selectedProductRequested());\n  getSelectedProduct(dispatch, selectedProductLoaded, itemId);\n};\n\nexport { fetchSelectedProduct, clearSelectedProduct };","import {\n  FETCH_PRODUCTS_FAILURE,\n  FETCH_PRODUCTS_SPINNER_OPEN,\n  FETCH_PRODUCTS_SPINNER_CLOSE,\n  FETCH_PRODUCTS_SUCCESS,\n} from '../action-types';\nimport { getItems } from '../../services';\n\nconst productsLoaded = (newItems) => {\n  const objectsToArray = Object.values(newItems);\n  const getKeysToArray = Object.keys(newItems);\n  for (let i = 0; i < getKeysToArray.length; i++) {\n    objectsToArray[i].id = getKeysToArray[i];\n  }\n  return {\n    type: FETCH_PRODUCTS_SUCCESS,\n    payload: objectsToArray,\n  };\n};\n\nconst productsSpinnerOpen = () => {\n  return {\n    type: FETCH_PRODUCTS_SPINNER_OPEN,\n  };\n};\n\nconst productsSpinnerClose = () => {\n  return {\n    type: FETCH_PRODUCTS_SPINNER_CLOSE,\n  };\n};\n\nconst productsError = (error) => {\n  return {\n    type: FETCH_PRODUCTS_FAILURE,\n    payload: error,\n  };\n};\n\nconst fetchProducts = () => (dispatch) => {\n  dispatch(productsSpinnerOpen());\n  getItems(dispatch, 'products', productsLoaded);\n};\n\nexport { fetchProducts, productsError, productsSpinnerOpen, productsSpinnerClose, productsLoaded };","import {\n  FETCH_PROPERTIES_FAILURE,\n  FETCH_PROPERTIES_SPINNER_CLOSE,\n  FETCH_PROPERTIES_SPINNER_OPEN,\n  FETCH_PROPERTIES_SUCCESS,\n} from '../action-types';\nimport { getItems } from '../../services';\n\nconst propertiesLoaded = (newItems) => {\n  const objectsToArray = Object.values(newItems);\n  const getKeysToArray = Object.keys(newItems);\n  for (let i = 0; i < getKeysToArray.length; i++) {\n    objectsToArray[i].id = getKeysToArray[i];\n  }\n  return {\n    type: FETCH_PROPERTIES_SUCCESS,\n    payload: objectsToArray,\n  };\n};\n\nconst propertiesSpinnerOpen = () => {\n  return {\n    type: FETCH_PROPERTIES_SPINNER_OPEN,\n  };\n};\n\nconst propertiesSpinnerClose = () => {\n  return {\n    type: FETCH_PROPERTIES_SPINNER_CLOSE,\n  };\n};\n\nconst propertiesError = (error) => {\n  return {\n    type: FETCH_PROPERTIES_FAILURE,\n    payload: error,\n  };\n};\n\nconst fetchProperties = () => (dispatch) => {\n  dispatch(propertiesSpinnerOpen());\n  getItems(dispatch, 'properties', propertiesLoaded);\n};\n\nexport { fetchProperties, propertiesError, propertiesSpinnerOpen, propertiesSpinnerClose, propertiesLoaded };","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Spinner } from '../components/spinner';\n\nlet mapStateToPropsForRedirect = (state) => ({\n  logIn: state.isAuth.logIn,\n  loading: state.isAuth.loading,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (this.props.loading) return <Spinner />;\n\n      if (!this.props.logIn) return <Redirect to={'/login'} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { ProductListTable } from '../product-list-table';\nimport { SearchPanel } from '../search-panel';\nimport { fetchProducts, productsError, deletedProduct, resetNotifications } from '../../store/actions';\nimport { ErrorIndicator } from '../../pages/error-indicator';\nimport { deleteItem } from '../../services';\nimport { withAuthRedirect } from '../../hoc';\n\nimport './product-list.scss';\n\nclass ProductList extends Component {\n  state = {\n    term: '',\n    columnName: 'itemName',\n  };\n\n  componentDidMount() {\n    this.props.resetNotifications();\n    this.props.fetchProducts();\n  }\n\n  columnChange = (columnName) => {\n    this.setState({\n      columnName,\n    });\n  };\n\n  termSetup = (term) => {\n    this.setState({\n      term,\n    });\n  };\n\n  searchItems = (arr, term) => {\n    if (term.length === 0) {\n      return arr;\n    }\n\n    return arr.filter((el) => el[this.state.columnName].toString().toLowerCase().indexOf(term.toLowerCase()) > -1);\n  };\n\n  render() {\n    const { products, loading, error, productsError, deletedProduct } = this.props;\n\n    const { term } = this.state;\n\n    const visibleItems = this.searchItems(products, term);\n\n    return (\n      <div className={'product-list-wrap'}>\n        <div className={'product-list'}>\n          <div className={'button-wrap'}>\n            <Link to={'/add-item'} className={'add-item-link'}>\n              <Button className={'add-button'} variant={'warning'}>\n                Добавить товар\n              </Button>\n            </Link>\n          </div>\n          {error ? (\n            <ErrorIndicator />\n          ) : (\n            <div>\n              <SearchPanel termSetup={this.termSetup} columnChange={this.columnChange} />\n              <ProductListTable\n                products={visibleItems}\n                onDeleted={deleteItem}\n                loading={loading}\n                productsError={productsError}\n                deletedProduct={deletedProduct}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products.products,\n    loading: state.products.loading,\n    error: state.products.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProducts,\n  productsError,\n  deletedProduct,\n  resetNotifications,\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(ProductList);","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ruRU } from '@material-ui/core/locale';\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TableRow } from '@material-ui/core';\n\nimport { UniversalTablePagination } from '../universal-table-pagination';\nimport { PropertyListTableHeader } from './index';\n\nimport './property-list-table.scss';\n\nconst PropertyListTable = ({ properties, onDeleted, propertiesError, deletedProperty }) => {\n  // russian localization\n  const theme = createMuiTheme(\n    {\n      palette: {\n        primary: { main: '#1976d2' },\n      },\n    },\n    ruRU,\n  );\n\n  //\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, properties.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  //\n\n  //\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  //\n\n  return (\n    <div className={'property-list-table'}>\n      <ThemeProvider theme={theme}>\n        <TableContainer>\n          <Table>\n            <PropertyListTableHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n            <TableBody>\n              {(rowsPerPage > 0\n                ? stableSort(properties, getComparator(order, orderBy)).slice(\n                    page * rowsPerPage,\n                    page * rowsPerPage + rowsPerPage,\n                  )\n                : stableSort(properties, getComparator(order, orderBy))\n              ).map((property) => {\n                const { id, propertyName, propertyType } = property;\n                return (\n                  <TableRow key={id}>\n                    <TableCell>\n                      <div className={'property-name table-body'}>{propertyName}</div>\n                    </TableCell>\n                    <TableCell>\n                      <div className={'property-type table-body'}>{propertyType}</div>\n                    </TableCell>\n                    <TableCell align={'right'}>\n                      <Link\n                        to={'#'}\n                        onClick={() => onDeleted(id, 'properties', propertiesError, deletedProperty)}\n                        className={'link'}\n                      >\n                        Удалить\n                      </Link>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 47 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <UniversalTablePagination\n                  array={properties}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  handleChangePage={handleChangePage}\n                  handleChangeRowsPerPage={handleChangeRowsPerPage}\n                  setPage={setPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport {PropertyListTable};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './property-list-table.scss';\n\nconst PropertyListTableHeader = (props) => {\n  const { order, orderBy, onRequestSort } = props;\n\n  const headCells = [\n    { id: 'propertyName', label: 'Перечень проперти' },\n    { id: 'propertyType', label: 'Тип' },\n  ];\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  PropertyListTableHeader.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string,\n  };\n\n  const useStyles = makeStyles(() => ({\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n            id={`${headCell.id}`}\n            align={headCell.id === 'propertyName' ? 'center' : 'left'}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              IconComponent={ExpandMoreIcon}\n            >\n              <div className={'table-header'}>{headCell.label}</div>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n        <TableCell key={'administration'} id={'administration'}>\n          <div className={'table-header'}>Управление</div>\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport { PropertyListTableHeader };\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { PropertyListTable } from '../property-list-table';\nimport { Spinner } from '../spinner';\nimport { ErrorIndicator } from '../../pages/error-indicator';\nimport { fetchProperties, propertiesError, deletedProperty, resetNotifications } from '../../store/actions';\nimport { deleteItem } from '../../services';\nimport { withAuthRedirect } from '../../hoc';\n\nimport './property-list.scss';\n\nconst PropertyList = ({\n  fetchProperties,\n  propertiesError,\n  deletedProperty,\n  properties,\n  loading,\n  error,\n  resetNotifications,\n}) => {\n  useEffect(() => {\n    fetchProperties();\n    resetNotifications();\n  }, [fetchProperties, resetNotifications]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  return (\n    <div className={'property-list-wrap'}>\n      <div className={'property-list'}>\n        <div className={'button-wrap'}>\n          <Link to={'/add-property'} className={'add-property-link'}>\n            <Button className={'add-prop-button'} variant={'warning'}>\n              Добавить проперти\n            </Button>\n          </Link>\n        </div>\n        <PropertyListTable\n          properties={properties}\n          onDeleted={deleteItem}\n          propertiesError={propertiesError}\n          deletedProperty={deletedProperty}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    properties: state.properties.properties,\n    loading: state.properties.loading,\n    error: state.properties.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProperties,\n  propertiesError,\n  deletedProperty,\n  resetNotifications,\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(PropertyList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport { ProductList } from '../../components/product-list';\nimport { PropertyList } from '../../components/property-list';\nimport { userLogOut } from '../../services';\n\nimport './main.scss';\n\nconst Main = ({ email, history }) => {\n  const { pathname } = history.location;\n\n  return (\n    <div className={'main-wrap'}>\n      <div className={'header'}>\n        <div className={'button-group'}>\n          <div className={`wrap ${pathname === '/' ? 'colored' : null}`}>\n            <div className={'background'} />\n            <Link to={'/'} className={'header-links'}>\n              Листинг товаров\n            </Link>\n          </div>\n          <div className={`wrap ${pathname === '/property-list' ? 'colored' : null}`}>\n            <div className={'background'} />\n            <Link to={'/property-list'} className={'header-links'}>\n              Листинг проперти\n            </Link>\n          </div>\n        </div>\n        <div className={'button-group'}>\n          <div className={'user-name'}>Пользователь (E-mail): {email}</div>\n          <div className={'button-log-out-wrap'}>\n            <Button className={'button-log-out'} variant={'warning'} onClick={userLogOut}>\n              Выйти\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={'content'}>\n        <Switch>\n          <Route path=\"/\" component={ProductList} exact />\n          <Route path=\"/property-list\" component={PropertyList} exact />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport { Main };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { Main } from './index';\nimport { withAuthRedirect } from '../../hoc';\n\nconst MainContainer = ({ email, history }) => {\n  return <Main email={email} history={history} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    email: state.isAuth.email,\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, null))(MainContainer);\n","import React from 'react';\n\nimport './error-message-text.scss';\n\nconst ErrorMessageText = ({ message }) => {\n  if (message === undefined) {\n    return null;\n  }\n\n  switch (message) {\n    case 'There is no user record corresponding to this identifier. The user may have been deleted.':\n      return <div className={'text-error'}>Данного пользователя не существует</div>;\n\n    case 'The password is invalid or the user does not have a password.':\n      return <div className={'text-error'}>Неверный пароль</div>;\n    case 'The email address is already in use by another account.':\n      return <div className={'text-error'}>Пользователь с данным e-mail уже зарегестрирован</div>;\n    default:\n      return <div className={'text-error'}>{message}</div>;\n  }\n};\n\nexport { ErrorMessageText };\n","import * as yup from 'yup';\n\nexport const loginValidationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .typeError('Должно быть строкой')\n    .min(4, 'Логин должен быть не менее 4 символов')\n    .max(20, 'Логин должен быть не болле 20 символов')\n    .required('Обязательное поле'),\n  password: yup\n    .string()\n    .typeError('Должно быть строкой')\n    .min(8, 'Пароль должен быть не менее 8 символов')\n    .required('Обязательное поле'),\n});","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddItemInputStyles = makeStyles({\n  root: {\n    maxWidth: '255px',\n    padding: '8px 8px 7px 8px',\n  },\n  input: {\n    padding: '0',\n    height: '100%',\n  },\n});\n\nexport { useAddItemInputStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddItemLabelStyles = makeStyles({\n  root: {\n    fontFamily: 'Roboto, serif !important',\n    fontStyle: 'normal !important',\n    fontWeight: 'normal !important',\n    fontSize: '14px !important',\n    lineHeight: '16px !important',\n    color: '#000000 !important',\n    opacity: 0.8,\n    letterSpacing: '0 !important',\n  },\n});\n\n// !important пришлось добавить потому-что иначе стили не перебивались\n\nexport { useAddItemLabelStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddItemSelectStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 0,\n    width: 255,\n  },\n  root: {\n    fontFamily: 'Roboto, serif',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: 14,\n    lineHeight: '16px',\n    color: '#000000',\n    paddingTop: 8.5,\n    paddingBottom: 6.5,\n    opacity: 0.8,\n  },\n  icon: {\n    color: '#0258FF',\n  },\n}));\n\nexport { useAddItemSelectStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddItemTextareaStyles = makeStyles({\n  root: {\n    maxWidth: '540px',\n    padding: '8px 8px 7px 8px',\n  },\n});\n\nexport { useAddItemTextareaStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddPropInputStyles = makeStyles({\n  root: {\n    width: '255px',\n    padding: '8px 8px 7px 8px',\n    marginRight: '22px',\n    '@media (max-width:576px)': {\n      marginRight: 0,\n    },\n  },\n  input: {\n    padding: '0',\n/*    height: '1em',*/\n  },\n});\n\nexport { useAddPropInputStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst usePropertyLabelStyles = makeStyles({\n  root: {\n    maxWidth: '120px',\n    marginLeft: 0,\n  },\n  label: {\n    fontFamily: 'Roboto, serif',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: 14,\n    lineHeight: '16px',\n    color: '#000000',\n    opacity: 0.8,\n  },\n});\n\nexport { usePropertyLabelStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useAddPropertyButtonStyles = makeStyles({\n  root: {\n    color: '#0258FF',\n    padding: '8px',\n  },\n});\n\nexport { useAddPropertyButtonStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useLoginButtonStyles = makeStyles({\n  root: {\n    background: '#ffb800',\n    '&:hover': {\n      background: '#d7a002',\n    },\n    borderRadius: 4,\n    border: 0,\n    color: '#FFFFFF',\n    height: 32,\n    width: 160,\n  },\n  label: {\n    textTransform: 'none',\n  },\n});\n\nexport { useLoginButtonStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useRegistrationButtonStyles = makeStyles({\n  root: {\n    background: '#ffb800',\n    '&:hover': {\n      background: '#d7a002',\n    },\n    borderRadius: 4,\n    border: 0,\n    color: '#FFFFFF',\n    height: 32,\n    width: 200,\n  },\n  label: {\n    textTransform: 'none',\n  },\n});\n\nexport { useRegistrationButtonStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useSaveButtonStyles = makeStyles({\n  root: {\n    background: '#34C15C',\n    '&:hover': {\n      background: '#229641',\n    },\n    borderRadius: 4,\n    border: 0,\n    color: '#FFFFFF',\n    height: 32,\n    width: 160,\n    boxShadow: '5px 10px 10px rgba(0, 0, 0, 0.05)',\n  },\n  label: {\n    textTransform: 'none',\n  },\n});\n\nexport { useSaveButtonStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useUploadButtonStyles = makeStyles({\n  root: {\n    background: 'none',\n    '&:hover': {\n      background: 'none',\n      boxShadow: 'none',\n    },\n    borderRadius: 4,\n    color: '#828282',\n    minHeight: 32,\n    width: 255,\n    boxShadow: 'none',\n    border: '1px solid #E0E0E0',\n    padding: '4px 8px',\n  },\n  label: {\n    textTransform: 'none',\n    justifyContent: 'space-between',\n  },\n});\n\nexport { useUploadButtonStyles };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useProductCardItemSelectStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 0,\n    width: 255,\n  },\n  root: {\n    fontFamily: 'Roboto, serif',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: 14,\n    lineHeight: '16px',\n    color: '#000000',\n    paddingTop: 8.5,\n    paddingBottom: 6.5,\n  },\n  icon: {\n    color: '#0258FF',\n  },\n}));\n\nexport { useProductCardItemSelectStyles };\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    button: {\n      fontFamily: 'Roboto, serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontSize: 16,\n      lineHeight: '19px',\n    },\n  },\n});\n\nexport { theme };\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst themeUploadBtn = createMuiTheme({\n  typography: {\n    button: {\n      fontFamily: 'Roboto, serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontSize: 14,\n      lineHeight: '16px',\n      letterSpacing: 'none',\n    },\n  },\n});\n\nexport { themeUploadBtn };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useFormHelperTextStyle = makeStyles({\n  root: {\n    position: 'absolute',\n    bottom: '-17px'\n  },\n});\n\nexport { useFormHelperTextStyle };\n","import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\nimport { useFormHelperTextStyle } from '../../styles/customizing-material-ui-components';\n\nconst FormHelperTextStyled = ({ children }) => {\n  const classes = useFormHelperTextStyle();\n  return <FormHelperText classes={{ root: classes.root }}>{children}</FormHelperText>;\n};\n\nexport { FormHelperTextStyled };\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormControl, FormHelperText, FormLabel, Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport { ErrorMessageText } from '../../components/error-message-text';\nimport { submitLogIn } from '../../services';\nimport { loginValidationSchema } from './login-validation-shema';\nimport { FormHelperTextStyled } from \"../../components/form-helper-text\";\n\nimport { useLoginButtonStyles } from '../../styles/customizing-material-ui-components';\n\nimport './login.scss';\n\nconst Login = ({ history }) => {\n  const classes = useLoginButtonStyles();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      showPassword: false,\n    },\n    validationSchema: loginValidationSchema,\n    onSubmit: (values) => {\n      submitLogIn(values)\n        .then(() => {\n          setErrorMessage(null);\n          history.push('/');\n        })\n        .catch((e) => {\n          console.log(e.message);\n          setErrorMessage(e.message);\n        });\n    },\n    validateOnBlur: true,\n  });\n\n  const { values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty, setFieldValue } = formik;\n\n  return (\n    <div className={'login'}>\n      <Tooltip title=\"Login: admin@admin.com Password: admin123\">\n        <form onSubmit={handleSubmit} className={'form-wrap'}>\n          <h4>Вход</h4>\n          {errorMessage ? <ErrorMessageText message={errorMessage} /> : null}\n          <div className={'login-wrap'}>\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)}>\n              <FormLabel>Логин</FormLabel>\n              <OutlinedInput\n                type=\"text\"\n                variant=\"outlined\"\n                notched={false}\n                placeholder=\"Введите логин\"\n                name={'email'}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {touched.email && errors.email && <FormHelperTextStyled>{errors.email}</FormHelperTextStyled>}\n            </FormControl>\n            <FormControl fullWidth error={Boolean(touched.password && errors.password)}>\n              <FormLabel>Пароль</FormLabel>\n              <OutlinedInput\n                notched={false}\n                placeholder=\"Введите пароль\"\n                type={values.showPassword ? 'text' : 'password'}\n                name={'password'}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      name={'showPassword'}\n                      onClick={() => setFieldValue('showPassword', !values.showPassword)}\n                      edge=\"end\"\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n              {touched.password && errors.password && <FormHelperTextStyled>{errors.password}</FormHelperTextStyled>}\n            </FormControl>\n          </div>\n          <div className={'login-button'}>\n            <Button\n              classes={{\n                root: classes.root,\n                label: classes.label,\n              }}\n              type={'submit'}\n              disabled={!isValid || !dirty}\n              onClick={handleSubmit}\n            >\n              Войти\n            </Button>\n          </div>\n          <div className={'link'}>\n            <Link to={'/registration'}>Зарегестрироваться</Link>\n          </div>\n        </form>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Login from './login';\nimport { userIsAuth } from '../../store/actions';\nimport { Spinner } from '../../components/spinner';\n\nconst LoginContainer = ({ logIn, userIsAuth, loading }) => {\n  useEffect(() => {\n    userIsAuth();\n  }, [userIsAuth]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (logIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Login />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    logIn: state.isAuth.logIn,\n    loading: state.isAuth.loading,\n  };\n};\n\nconst mapDispatchToProps = {\n  userIsAuth,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n","import * as yup from 'yup';\n\nexport const registrationValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(4, 'Имя должно быть не менее 4 символов')\n    .max(20, 'Имя должно быть не более 20 символов')\n    .typeError('Должно быть строкой')\n    .required('Обязательное поле'),\n  secondName: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n  password: yup\n    .string()\n    .min(8, 'Пароль должен быть не менее 8 символов')\n    .typeError('Должно быть строкой')\n    .required('Обязательное поле'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Пароли не совпадают')\n    .required('Обязательное поле'),\n  email: yup.string().email('Введите верный email').required('Обязательное поле'),\n});","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, FormLabel } from '@material-ui/core';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { ErrorMessageText } from '../../components/error-message-text';\nimport { submitRegistration } from '../../services';\nimport { registrationValidationSchema } from './registration-validation-shema';\nimport { FormHelperTextStyled } from \"../../components/form-helper-text\";\n\nimport { useRegistrationButtonStyles } from '../../styles/customizing-material-ui-components';\n\nimport './registration.scss';\n\nconst Registration = ({ history }) => {\n  const classes = useRegistrationButtonStyles();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      secondName: '',\n      password: '',\n      confirmPassword: '',\n      email: '',\n      showPassword: false,\n      showConfirmPassword: false,\n    },\n    validationSchema: registrationValidationSchema,\n    onSubmit: (values) => {\n      submitRegistration(values)\n        .then(() => {\n          setErrorMessage(null);\n          history.push('/');\n        })\n        .catch((e) => {\n          console.log(e.message);\n          setErrorMessage(e.message);\n        });\n    },\n    validateOnBlur: true,\n  });\n  const { values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty, setFieldValue } = formik;\n  return (\n    <div className={'registration'}>\n      <form onSubmit={handleSubmit} className={'form-wrap'}>\n        <h4>Регистрация</h4>\n        {errorMessage ? <ErrorMessageText message={errorMessage} /> : null}\n        <div className={'registration-wrap'}>\n          <FormControl fullWidth error={Boolean(touched.name && errors.name)}>\n            <FormLabel>Имя</FormLabel>\n            <OutlinedInput\n              type=\"text\"\n              variant=\"outlined\"\n              notched={false}\n              placeholder=\"Введите имя\"\n              name={'name'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n            />\n            {touched.name && errors.name && <FormHelperTextStyled>{errors.name}</FormHelperTextStyled>}\n          </FormControl>\n          <FormControl fullWidth error={Boolean(touched.secondName && errors.secondName)}>\n            <FormLabel>Фамилия</FormLabel>\n            <OutlinedInput\n              type=\"text\"\n              variant=\"outlined\"\n              notched={false}\n              placeholder=\"Введите фамилию\"\n              name={'secondName'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.secondName}\n            />\n            {touched.secondName && errors.secondName && <FormHelperTextStyled>{errors.secondName}</FormHelperTextStyled>}\n          </FormControl>\n          <FormControl fullWidth error={Boolean(touched.email && errors.email)}>\n            <FormLabel>E-mail</FormLabel>\n            <OutlinedInput\n              type=\"email\"\n              variant=\"outlined\"\n              notched={false}\n              placeholder=\"Введите ваш e-mail\"\n              name={'email'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            {touched.email && errors.email && <FormHelperTextStyled>{errors.email}</FormHelperTextStyled>}\n          </FormControl>\n          <FormControl fullWidth error={Boolean(touched.password && errors.password)}>\n            <FormLabel>Пароль</FormLabel>\n            <OutlinedInput\n              notched={false}\n              placeholder=\"Введите пароль\"\n              type={values.showPassword ? 'text' : 'password'}\n              name={'password'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    name={'showPassword'}\n                    onClick={() => setFieldValue('showPassword', !values.showPassword)}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            {touched.password && errors.password && <FormHelperTextStyled>{errors.password}</FormHelperTextStyled>}\n          </FormControl>\n          <FormControl fullWidth error={Boolean(touched.confirmPassword && errors.confirmPassword)}>\n            <FormLabel>Повторите пароль</FormLabel>\n            <OutlinedInput\n              notched={false}\n              placeholder=\"Повторите пароль\"\n              type={values.showConfirmPassword ? 'text' : 'password'}\n              name={'confirmPassword'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    name={'showConfirmPassword'}\n                    onClick={() => setFieldValue('showConfirmPassword', !values.showConfirmPassword)}\n                    edge=\"end\"\n                  >\n                    {values.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n            {touched.confirmPassword && errors.confirmPassword && (\n              <FormHelperTextStyled>{errors.confirmPassword}</FormHelperTextStyled>\n            )}\n          </FormControl>\n        </div>\n        <div className={'registration-button'}>\n          <Button\n            classes={{\n              root: classes.root,\n              label: classes.label,\n            }}\n            type={'submit'}\n            disabled={!isValid || !dirty}\n            onClick={handleSubmit}\n          >\n            Зарегестрироваться\n          </Button>\n        </div>\n        <div className={'link'}>\n          <Link to={'/login'}>Вернуться</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Registration);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { userIsAuth } from '../../store/actions';\nimport Registration from './registration';\n\nconst RegistrationContainer = ({ logIn, userIsAuth }) => {\n  useEffect(() => {\n    userIsAuth();\n  }, [userIsAuth]);\n\n  if (logIn) {\n    return <Redirect to={'/'} />;\n  }\n\n  return <Registration />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    logIn: state.isAuth.logIn,\n  };\n};\n\nconst mapDispatchToProps = {\n  userIsAuth,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationContainer);\n","export default __webpack_public_path__ + \"static/media/Ellipse.f958a917.svg\";","import React from 'react';\nimport { Radio } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport image from '../../svg/Ellipse.svg';\n\nconst StyledRadio = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      padding: '0 8px 0 0',\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n    icon: {\n      borderRadius: '50%',\n      width: 24,\n      height: 24,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#FFFFFF',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      '$root.Mui-focusVisible &': {\n        outline: '2px auto rgba(19,124,189,.6)',\n        outlineOffset: 2,\n      },\n      'input:hover ~ &': {\n        backgroundColor: '#FFFFFF',\n      },\n    },\n    checkedIcon: {\n      backgroundImage: `url(${image})`,\n      backgroundRepeat: 'no-repeat',\n      margin: '0px auto',\n      backgroundPosition: 'center center',\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      size={'small'}\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n};\n\nexport { StyledRadio };\n","import * as yup from 'yup';\n\nconst validateNames = (arr, value) => {\n  const result = arr.find((el) => el?.propertyName.toLowerCase() === value?.toLowerCase());\n  return !result;\n};\n\nexport const addPropertyValidationSchema = (properties) => {\n  return yup.object().shape({\n    propertyName: yup\n      .string()\n      .typeError('Должно быть строкой')\n      .test('sameName', 'Свойство с таким именем уже существует', (value) => {\n        if (!value) return true; // если поле пустое, перейдет к следующей проверке required\n        return validateNames(properties, value); // возвращает false, если свойство с таким именем уже существует\n      })\n      .trim('Без паробелов')\n      .required('Обязательное поле'),\n    propertyType: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n  });\n};","import React, { useCallback } from 'react';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, FormControlLabel, FormLabel, RadioGroup } from '@material-ui/core';\n\nimport { StyledRadio } from '../../components/styled-radio-icon';\nimport { postItemsToDatabase } from '../../services';\nimport { addPropertyValidationSchema } from './add-property-validation-shema';\nimport { FormHelperTextStyled } from \"../../components/form-helper-text\";\n\nimport {\n  useAddItemLabelStyles,\n  useAddItemInputStyles,\n  useSaveButtonStyles,\n  usePropertyLabelStyles,\n} from '../../styles/customizing-material-ui-components';\n\nimport './add-property.scss';\n\nconst AddProperty = ({\n  properties,\n  propertiesError,\n  createdProperty,\n  propertiesSpinnerOpen,\n  propertiesSpinnerClose,\n}) => {\n  const classesLabel = useAddItemLabelStyles();\n\n  const classesInput = useAddItemInputStyles();\n\n  const classesSaveBtn = useSaveButtonStyles();\n\n  const classesRadioButtons = usePropertyLabelStyles();\n\n  const getError = useCallback((touched, error) => {\n    return touched && error && <FormHelperTextStyled>{error}</FormHelperTextStyled>;\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      propertyName: '',\n      propertyType: 'Dropdown',\n    },\n    validationSchema: addPropertyValidationSchema(properties),\n    onSubmit: async (values) => {\n      propertiesSpinnerOpen();\n      const { propertyName } = values;\n      const trimmedPropertyName = propertyName.trim();\n      const newValues = {\n        ...values,\n        propertyName: trimmedPropertyName,\n      };\n\n      await postItemsToDatabase(newValues, 'properties', propertiesError, propertiesSpinnerClose, createdProperty);\n    },\n    validateOnBlur: true,\n  });\n\n  const { values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty } = formik;\n\n  return (\n    <div className={'add-property'}>\n      <div className={'add-property-bordered-wrap'}>\n        <form onSubmit={handleSubmit} className={'add-property-wrap'}>\n          <div className={'buttons-wrap'}>\n            <Link to={'/property-list'} className={'button-back'}>\n              Вернуться\n            </Link>\n            <Button\n              disableRipple={true}\n              className={'button-save'}\n              classes={{\n                root: classesSaveBtn.root,\n                label: classesSaveBtn.label,\n              }}\n              type={'submit'}\n              disabled={!isValid || !dirty}\n              onClick={handleSubmit}\n            >\n              Сохранить\n            </Button>\n          </div>\n          <div className={'add-prop-head'}>\n            <h5>Добавление свойства</h5>\n          </div>\n          <div className={'add-prop-body'}>\n            <FormControl error={Boolean(touched.propertyName && errors.propertyName)}>\n              <FormLabel classes={{ root: classesLabel.root }} className={'labels'}>\n                Название свойства<span className={'red-star'}>*</span>\n              </FormLabel>\n              <OutlinedInput\n                type=\"text\"\n                variant=\"outlined\"\n                notched={false}\n                placeholder=\"Название свойства\"\n                multiline\n                classes={{\n                  root: classesInput.root,\n                }}\n                name={'propertyName'}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.propertyName}\n              />\n              {getError(touched.propertyName, errors.propertyName)}\n            </FormControl>\n\n            <FormControl error={touched.propertyType && errors.propertyType}>\n              <FormLabel classes={{ root: classesLabel.root }} focused={false} className={'labels'}>\n                Укажите тип свойства<span className={'red-star'}>*</span>\n              </FormLabel>\n              <RadioGroup name=\"propertyType\" value={values.propertyType} onChange={handleChange} onBlur={handleBlur}>\n                <FormControlLabel\n                  value=\"Dropdown\"\n                  control={<StyledRadio />}\n                  classes={{\n                    root: classesRadioButtons.root,\n                    label: classesRadioButtons.label,\n                  }}\n                  label=\"Dropdown\"\n                />\n                <FormControlLabel\n                  value=\"Number\"\n                  classes={{\n                    root: classesRadioButtons.root,\n                    label: classesRadioButtons.label,\n                  }}\n                  control={<StyledRadio />}\n                  label=\"Number\"\n                />\n                <FormControlLabel\n                  value=\"String\"\n                  classes={{\n                    root: classesRadioButtons.root,\n                    label: classesRadioButtons.label,\n                  }}\n                  control={<StyledRadio />}\n                  label=\"String\"\n                />\n              </RadioGroup>\n              {getError(touched.propertyType, errors.propertyType)}\n            </FormControl>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProperty;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { AddProperty } from './index';\nimport { Spinner } from '../../components/spinner';\nimport { ErrorIndicator } from '../error-indicator';\nimport {\n  fetchProperties,\n  propertiesError,\n  propertiesSpinnerClose,\n  propertiesSpinnerOpen,\n  createdProperty,\n  resetNotifications,\n} from '../../store/actions';\nimport { withAuthRedirect } from '../../hoc';\n\nconst AddPropertyContainer = ({\n  fetchProperties,\n  propertiesError,\n  properties,\n  loading,\n  error,\n  createdProperty,\n  propertiesSpinnerOpen,\n  propertiesSpinnerClose,\n  resetNotifications,\n}) => {\n  useEffect(() => {\n    resetNotifications();\n    fetchProperties();\n  }, [resetNotifications, fetchProperties]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  return (\n    <AddProperty\n      properties={properties}\n      propertiesError={propertiesError}\n      createdProperty={createdProperty}\n      propertiesSpinnerOpen={propertiesSpinnerOpen}\n      propertiesSpinnerClose={propertiesSpinnerClose}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    properties: state.properties.properties,\n    loading: state.properties.loading,\n    error: state.properties.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProperties,\n  propertiesError,\n  createdProperty,\n  propertiesSpinnerOpen,\n  propertiesSpinnerClose,\n  resetNotifications,\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(AddPropertyContainer);\n","import React, { useEffect, useState } from 'react';\n\nimport './thumb.scss';\n\nconst Thumb = ({ file }) => {\n  const [thumb, setThumb] = useState(undefined);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    setThumb(() => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        setThumb(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }, [file]);\n\n  if (!file) {\n    return null;\n  }\n\n  return <img src={thumb} alt={file.name} className={'thumb'} />;\n};\n\nexport { Thumb };\n","import React from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst PriceFormatInput = ({ classesInput, onChange, onBlur, values }) => {\n  return (\n    <OutlinedInput\n      variant=\"outlined\"\n      notched={false}\n      placeholder=\"Стоимость товара\"\n      className={'number-input'}\n      classes={{\n        root: classesInput.root,\n        input: classesInput.input,\n      }}\n      name={'price'}\n      onChange={onChange}\n      onBlur={onBlur}\n      value={values.toLocaleString('ru-RU')}\n    />\n  );\n};\n\nexport { PriceFormatInput };\n","import React, { useCallback, useEffect, useState, memo } from 'react';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport {\n  useAddItemSelectStyles,\n  useAddPropInputStyles,\n  useAddPropertyButtonStyles,\n} from '../../styles/customizing-material-ui-components';\n\nimport './add-property-to-product.scss';\n\nconst createSchema = () => {\n  return {\n    id: '',\n    propertyName: '',\n    propertyValue: '',\n    propertyType: '',\n  };\n};\n\nconst AddPropertyToProduct = memo(\n  ({\n    handleChange,\n    touched,\n    errors,\n    handleBlur,\n    properties,\n    getError,\n    setFieldValue,\n    setFieldTouched,\n    propertiesOfProduct,\n    handleTrim,\n  }) => {\n    const classesSelect = useAddItemSelectStyles();\n    const classesButton = useAddPropertyButtonStyles();\n    const classesInput = useAddPropInputStyles();\n\n    const [lastProperties, setLastProperties] = useState(properties);\n\n    const propertiesWithEditing = useCallback((properties, propertiesOfProduct) => {\n      const result = properties.filter((x) => !propertiesOfProduct.some((y) => x.propertyName === y.propertyName));\n      setLastProperties(result);\n    }, []);\n\n    useEffect(() => {\n      propertiesWithEditing(properties, propertiesOfProduct);\n    }, [propertiesWithEditing, properties, propertiesOfProduct]);\n\n    const removeSelectedProperties = useCallback(\n      (event, index) => {\n        handleChange(event);\n        setFieldValue(`propertiesOfProduct.${index}.propertyValue`, '', false);\n        setFieldTouched(`propertiesOfProduct.${index}.propertyValue`, false, false);\n        const { value } = event.target;\n        const lastProps = lastProperties.filter((item) => item.propertyName !== value);\n        setLastProperties(lastProps);\n      },\n      [handleChange, setFieldValue, setFieldTouched, lastProperties],\n    );\n\n    const pushSelectedProperties = useCallback(\n      (property) => {\n        if (property) {\n          const selectedProperty = properties.find(({ propertyName }) => propertyName === property);\n          lastProperties.push(selectedProperty);\n        }\n        return null;\n      },\n      [lastProperties, properties],\n    );\n\n    const renderMenuItems = useCallback((item, index) => {\n      const { propertyName } = item;\n      return (\n        <MenuItem value={propertyName} key={index}>\n          {propertyName}\n        </MenuItem>\n      );\n    }, []);\n\n    const selectedWithLastProperties = useCallback(\n      (propName) => {\n        const selectedProperty = properties.find(({ propertyName }) => propertyName === propName);\n        const arr = lastProperties.slice();\n        arr.push(selectedProperty);\n        return arr.map(renderMenuItems);\n      },\n      [lastProperties, properties, renderMenuItems],\n    );\n\n    const addItems = useCallback(() => {\n      const newItem = createSchema();\n      if (Array.isArray(propertiesOfProduct)) {\n        setFieldValue('propertiesOfProduct', [...propertiesOfProduct, newItem], true);\n      } else {\n        setFieldValue('propertiesOfProduct', [newItem], true);\n      }\n    }, [setFieldValue, propertiesOfProduct]);\n\n    const removeItem = useCallback(\n      (index) => {\n        const newValue = propertiesOfProduct.filter((_, i) => i !== index);\n        setFieldValue('propertiesOfProduct', newValue, true);\n      },\n      [setFieldValue, propertiesOfProduct],\n    );\n\n    const addValueToProps = useCallback(\n      (nameOfFieldArray, selectedPropValue) => {\n        const newItem = { propertyValue: '' };\n        if (Array.isArray(selectedPropValue)) {\n          setFieldValue(nameOfFieldArray, [...selectedPropValue, newItem], true);\n        } else {\n          setFieldValue(nameOfFieldArray, [newItem], true);\n        }\n      },\n      [setFieldValue],\n    );\n\n    const removeValueFromProps = useCallback(\n      (nameOfFieldArray, selectedPropValue, index) => {\n        const newValue = selectedPropValue.filter((_, i) => i !== index);\n        setFieldValue(nameOfFieldArray, newValue, true);\n      },\n      [setFieldValue],\n    );\n\n    const errorConditionDropdown = useCallback(\n      (index, idx) => {\n        return (\n          touched.propertiesOfProduct &&\n          touched.propertiesOfProduct[index] &&\n          errors.propertiesOfProduct &&\n          errors.propertiesOfProduct[index] &&\n          touched.propertiesOfProduct[index].propertyValue &&\n          errors.propertiesOfProduct[index].propertyValue &&\n          touched.propertiesOfProduct[index].propertyValue[idx] &&\n          errors.propertiesOfProduct[index].propertyValue[idx]\n        );\n      },\n      [touched.propertiesOfProduct, errors.propertiesOfProduct],\n    );\n\n    const renderValueInputs = useCallback(\n      (selectedProp, index) => {\n        const selectedProperty = properties.find(({ propertyName }) => propertyName === selectedProp.propertyName);\n        selectedProp.propertyType = selectedProperty.propertyType;\n        selectedProp.id = selectedProperty.id;\n\n        const nameOfFieldArray = `propertiesOfProduct.${index}.propertyValue`;\n        switch (selectedProperty.propertyType) {\n          case 'Dropdown':\n            return (\n              <div className={'add-property-right-column'}>\n                <p className={'property-name'}>Значение</p>\n                {selectedProp.propertyValue &&\n                  selectedProp.propertyValue.length > 0 &&\n                  selectedProp.propertyValue.map((selectedPropValue, idx) => (\n                    <div className={'input-with-remove-button'} key={idx}>\n                      <FormControl\n                        error={\n                          errorConditionDropdown(index, idx)\n                            ? Boolean(\n                                touched.propertiesOfProduct[index].propertyValue[idx].propertyValue &&\n                                  errors.propertiesOfProduct[index].propertyValue[idx].propertyValue,\n                              )\n                            : null\n                        }\n                      >\n                        <OutlinedInput\n                          type=\"text\"\n                          variant=\"outlined\"\n                          notched={false}\n                          multiline\n                          classes={{\n                            root: classesInput.root,\n                            input: classesInput.input,\n                          }}\n                          name={`${nameOfFieldArray}.${idx}.propertyValue`}\n                          onChange={handleChange}\n                          onBlur={(event) =>\n                            handleTrim(event, `propertiesOfProduct.${index}.propertyValue.${idx}.propertyValue`)\n                          }\n                          value={propertiesOfProduct[index].propertyValue[idx].propertyValue}\n                        />\n                        {errorConditionDropdown(index, idx)\n                          ? getError(\n                              touched.propertiesOfProduct[index].propertyValue[idx].propertyValue,\n                              errors.propertiesOfProduct[index].propertyValue[idx].propertyValue,\n                            )\n                          : null}\n                      </FormControl>\n                      <IconButton\n                        classes={{ root: classesButton.root }}\n                        onClick={() => removeValueFromProps(nameOfFieldArray, selectedProp.propertyValue, idx)}\n                      >\n                        <RemoveCircleOutlineIcon />\n                      </IconButton>\n                    </div>\n                  ))}\n                <div className={'right-column-add-button'}>\n                  <IconButton\n                    classes={{ root: classesButton.root }}\n                    onClick={() => addValueToProps(nameOfFieldArray, selectedProp.propertyValue)}\n                  >\n                    <AddCircleOutlineIcon />\n                  </IconButton>\n                </div>\n              </div>\n            );\n          case 'Number':\n            const errorConditionNumber =\n              touched.propertiesOfProduct &&\n              touched.propertiesOfProduct[index] &&\n              errors.propertiesOfProduct &&\n              errors.propertiesOfProduct[index];\n            return (\n              <div className={'add-property-right-column'}>\n                <p className={'property-name'}>Значение</p>\n                <FormControl\n                  error={\n                    errorConditionNumber\n                      ? Boolean(\n                          touched.propertiesOfProduct[index].propertyValue &&\n                            errors.propertiesOfProduct[index].propertyValue,\n                        )\n                      : null\n                  }\n                >\n                  <OutlinedInput\n                    type=\"number\"\n                    variant=\"outlined\"\n                    notched={false}\n                    classes={{\n                      root: classesInput.root,\n                      input: classesInput.input,\n                    }}\n                    name={`${nameOfFieldArray}`}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={propertiesOfProduct[index].propertyValue}\n                  />\n                  {errorConditionNumber\n                    ? getError(\n                        touched.propertiesOfProduct[index].propertyValue,\n                        errors.propertiesOfProduct[index].propertyValue,\n                      )\n                    : null}\n                </FormControl>\n              </div>\n            );\n          case 'String':\n            const errorConditionString =\n              touched.propertiesOfProduct &&\n              touched.propertiesOfProduct[index] &&\n              errors.propertiesOfProduct &&\n              errors.propertiesOfProduct[index];\n            return (\n              <div className={'add-property-right-column'}>\n                <p className={'property-name'}>Значение</p>\n                <FormControl\n                  error={\n                    errorConditionString\n                      ? Boolean(\n                          touched.propertiesOfProduct[index].propertyValue &&\n                            errors.propertiesOfProduct[index].propertyValue,\n                        )\n                      : null\n                  }\n                >\n                  <OutlinedInput\n                    type=\"text\"\n                    variant=\"outlined\"\n                    notched={false}\n                    multiline\n                    classes={{\n                      root: classesInput.root,\n                      input: classesInput.input,\n                    }}\n                    name={`${nameOfFieldArray}`}\n                    onChange={handleChange}\n                    onBlur={(event) => handleTrim(event, `propertiesOfProduct.${index}.propertyValue`)}\n                    value={propertiesOfProduct[index].propertyValue}\n                  />\n                  {errorConditionString\n                    ? getError(\n                        touched.propertiesOfProduct[index].propertyValue,\n                        errors.propertiesOfProduct[index].propertyValue,\n                      )\n                    : null}\n                </FormControl>\n              </div>\n            );\n          default:\n            return null;\n        }\n      },\n      [\n        addValueToProps,\n        classesButton.root,\n        classesInput.input,\n        classesInput.root,\n        errors.propertiesOfProduct,\n        getError,\n        handleBlur,\n        handleChange,\n        properties,\n        propertiesOfProduct,\n        removeValueFromProps,\n        touched.propertiesOfProduct,\n        errorConditionDropdown,\n        handleTrim,\n      ],\n    );\n\n    return (\n      <div className={'add-property-to-product'}>\n        <div className={'add-property-head'}>\n          <h5>Добавление товару свойств</h5>\n          {properties.length > propertiesOfProduct.length && (\n            <IconButton\n              classes={{ root: classesButton.root }}\n              onClick={() => {\n                addItems();\n              }}\n            >\n              <AddCircleOutlineIcon />\n            </IconButton>\n          )}\n        </div>\n        <div className={'add-property-body'}>\n          {propertiesOfProduct.map((propertyOfProduct, index) => (\n            <div className=\"add-property-body-element\" key={index}>\n              <div className={'add-prop-left-column'}>\n                <div className={'add-prop-row'}>\n                  <div className={'add-prop-left-button-wrap'}>\n                    <IconButton\n                      classes={{ root: classesButton.root }}\n                      onClick={() => {\n                        pushSelectedProperties(propertiesOfProduct[index].propertyName);\n                        /* remove(index);*/\n                        removeItem(index);\n                      }}\n                    >\n                      <RemoveCircleOutlineIcon />\n                    </IconButton>\n                  </div>\n                  <p className={'property-name'}>Свойство {index + 1}</p>\n                </div>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classesSelect.formControl}\n                  classes={{ label: classesSelect.label }}\n                >\n                  <Select\n                    classes={{\n                      root: classesSelect.root,\n                      icon: classesSelect.icon,\n                    }}\n                    name={`propertiesOfProduct.${index}.propertyName`}\n                    value={propertiesOfProduct[index].propertyName}\n                    onChange={(event) => {\n                      removeSelectedProperties(event, index);\n                    }}\n                    onBlur={handleBlur}\n                    notched={false}\n                  >\n                    {propertiesOfProduct[index].propertyName\n                      ? selectedWithLastProperties(propertiesOfProduct[index].propertyName)\n                      : lastProperties.map(renderMenuItems)}\n                  </Select>\n                </FormControl>\n              </div>\n              {propertiesOfProduct[index].propertyName && renderValueInputs(propertiesOfProduct[index], index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport { AddPropertyToProduct };\n","import * as yup from 'yup';\n\nexport const addItemValidationSchema = yup.object().shape({\n  itemId: yup.boolean(),\n  itemName: yup.string().typeError('Должно быть строкой').trim('Без паробелов').required('Обязательное поле'),\n  price: yup\n    .number()\n    .typeError('Должно быть числом')\n    .integer('Должно быть целым числом')\n    .test('firstSymbol', 'Стоимость не должна ровняться нулю', (value) => {\n      return value?.toString().charAt(0) !== '0'; // число НЕ должно быть 0\n    })\n    .required('Обязательное поле'),\n  file: yup.object().when('itemId', {\n    is: true,\n    then: yup\n      .object()\n      .shape({\n        file: yup.mixed().test('fileSize', 'Размер файла не должен превышать 1Mб', (value) => {\n          return value ? value.size < 1048576 : true;\n        }),\n        type: yup\n          .string()\n          .oneOf(['image/jpeg', 'image/png', 'image/pjpeg'], 'Добавьте файл с правильным форматом .jpg,.jpeg,.png'),\n        name: yup.string(),\n      })\n      .nullable()\n      .typeError('Добавьте файл'),\n    otherwise: yup\n      .object()\n      .shape({\n        file: yup\n          .mixed()\n          .test('fileSize', 'Размер файла не должен превышать 1Mб', (value) => {\n            return value ? value.size < 1048576 : true;\n          })\n          .typeError('Добавьте файл')\n          .required('Добавьте файл'),\n        type: yup\n          .string()\n          .oneOf(['image/jpeg', 'image/png', 'image/pjpeg'], 'Добавьте файл с правильным форматом .jpg,.jpeg,.png')\n          .typeError('Добавьте файл')\n          .required('Добавьте файл'),\n        name: yup.string().typeError('Добавьте файл').required('Добавьте файл'),\n      })\n      .required(),\n  }),\n  fileUrl: yup.string().nullable().typeError('Должно быть строкой'),\n  description: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n  propertiesOfProduct: yup.array().of(\n    yup\n      .object()\n      .shape({\n        id: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n        propertyName: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n        propertyType: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n        propertyValue: yup.lazy((value) => {\n          switch (typeof value) {\n            case 'number':\n              return yup.number().typeError('Должно быть числом').required('Обязательное поле');\n            case 'string':\n              return yup.string().typeError('Должно быть строкой').required('Обязательное поле');\n            default:\n              return yup\n                .array()\n                .of(\n                  yup.object().shape({\n                    propertyValue: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\n                  }),\n                )\n                .required('Обязательное поле');\n          }\n        }),\n      })\n      .required('Обязательное поле'),\n  ),\n});","import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { FormControl, FormLabel } from '@material-ui/core';\nimport NumberFormat from 'react-number-format';\n\nimport { Thumb } from '../../components/thumb';\nimport { PriceFormatInput } from '../../components/price-format-input';\nimport { getDateOfChange, postItemsToDatabase, putItemsToDatabase, storage } from '../../services';\nimport { AddPropertyToProduct } from '../../components/add-property-to-product';\nimport { addItemValidationSchema } from './add-item-validation-schema';\nimport { FormHelperTextStyled } from \"../../components/form-helper-text\";\n\nimport {\n  themeUploadBtn,\n  useAddItemInputStyles,\n  useAddItemLabelStyles,\n  useAddItemTextareaStyles,\n  useSaveButtonStyles,\n  useUploadButtonStyles,\n} from '../../styles/customizing-material-ui-components';\n\nimport './add-item.scss';\n\nconst AddItem = memo(\n  ({\n    properties,\n    productsError,\n    itemId,\n    editingProduct,\n    clearSelectedProduct,\n    createdProduct,\n    editedProduct,\n    productsSpinnerOpen,\n    productsSpinnerClose,\n  }) => {\n    const [image, setImage] = useState(null);\n\n    const classesLabel = useAddItemLabelStyles();\n    const classesInput = useAddItemInputStyles();\n    const classesSaveBtn = useSaveButtonStyles();\n    const classesUploadBtn = useUploadButtonStyles();\n    const classesTextarea = useAddItemTextareaStyles();\n\n    const priceFormat = useCallback((value) => {\n      return value.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ');\n    }, []);\n\n    const createUniqueProperties = useCallback((allProperties, propertiesOfProduct) => {\n      if (!propertiesOfProduct) {\n        return allProperties;\n      }\n      const uniqueResultTwo = propertiesOfProduct.filter(function (obj) {\n        return !allProperties.some(function (obj2) {\n          return obj.id === obj2.id;\n        });\n      });\n\n      return allProperties.concat(uniqueResultTwo);\n    }, []);\n\n    const itemProperties = useMemo(() => {\n      return itemId ? createUniqueProperties(properties, editingProduct.propertiesOfProduct) : properties;\n    }, [itemId, properties, editingProduct, createUniqueProperties]);\n\n    const getFileSchema = useCallback(\n      (file) =>\n        file && {\n          file: file,\n          type: file.type,\n          name: file.name,\n        },\n      [],\n    );\n\n    const fileHandleChange = useCallback((e) => {\n      if (e.target.files[0]) {\n        setImage(e.target.files[0]);\n      } else setImage(null);\n    }, []);\n\n    const getError = useCallback((touched, error, index) => {\n      return touched && error && <FormHelperTextStyled key={index}>{error}</FormHelperTextStyled>;\n    }, []);\n\n    const formik = useFormik({\n      initialValues: {\n        itemId: Boolean(itemId),\n        itemName: editingProduct.itemName,\n        price: itemId ? editingProduct.price : '',\n        file: undefined,\n        fileUrl: editingProduct.fileUrl,\n        dateOfChange: '',\n        description: editingProduct.description,\n        propertiesOfProduct: itemId && editingProduct.propertiesOfProduct ? editingProduct.propertiesOfProduct : [],\n      },\n      validationSchema: addItemValidationSchema,\n      onSubmit: async (values) => {\n        productsSpinnerOpen();\n        const { price } = values;\n        const numberedPrice = parseInt(String(price).replace(/ /g, ''));\n\n        if (image) {\n          const fileNameWithRndNumber = `${image.name}_${Math.floor(Math.random() * 1000000)}`;\n          const uploadTask = storage.ref(`images/${fileNameWithRndNumber}`).put(image);\n          await uploadTask.on(\n            'state_changed',\n            (snapshot) => {},\n            (error) => {\n              productsError(error);\n            },\n            () => {\n              storage\n                .ref('images')\n                .child(fileNameWithRndNumber)\n                .getDownloadURL()\n                .then((url) => {\n                  const newValues = {\n                    ...values,\n                    price: numberedPrice,\n                    file: [],\n                    fileUrl: url,\n                  };\n\n                  if (itemId) {\n                    putItemsToDatabase(\n                      { ...newValues, dateOfChange: getDateOfChange() },\n                      itemId,\n                      'products',\n                      productsError,\n                      productsSpinnerClose,\n                      editedProduct,\n                    );\n                  } else {\n                    postItemsToDatabase(\n                      { ...newValues, dateOfChange: getDateOfChange() },\n                      'products',\n                      productsError,\n                      productsSpinnerClose,\n                      createdProduct,\n                    );\n                  }\n                });\n            },\n          );\n        }\n        else {\n          const newValues = {\n            ...values,\n            price: numberedPrice,\n            file: [],\n          };\n\n          await putItemsToDatabase(\n            { ...newValues, dateOfChange: getDateOfChange() },\n            itemId,\n            'products',\n            productsError,\n            productsSpinnerClose,\n            editedProduct,\n          );\n        }\n      },\n      validateOnBlur: true,\n    });\n\n    const {\n      values,\n      values: { itemName, price, file, fileUrl, description, propertiesOfProduct },\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      isValid,\n      handleSubmit,\n      dirty,\n      setFieldTouched,\n      setFieldValue,\n    } = formik;\n\n    const handleTrim = useCallback(\n      (event, trimValue) => {\n        handleBlur(event);\n        const newValue = event.target.value.trim();\n        setFieldValue(trimValue, newValue, true);\n      },\n      [handleBlur, setFieldValue],\n    );\n\n    return (\n      <div className={'add-item'}>\n        <div className={'add-item-bordered-wrap'}>\n          <form onSubmit={handleSubmit} className={'add-item-wrap'}>\n            <div className={'buttons-wrap'}>\n              <Link to={'/'} className={'button-back'} onClick={clearSelectedProduct}>\n                Вернуться\n              </Link>\n              <Button\n                disableRipple={true}\n                className={'button-save'}\n                classes={{\n                  root: classesSaveBtn.root,\n                  label: classesSaveBtn.label,\n                }}\n                type={'submit'}\n                disabled={!isValid || !dirty}\n                onClick={handleSubmit}\n              >\n                Сохранить\n              </Button>\n            </div>\n            <div className={'add-item-head'}>\n              <h5>{itemId ? 'Редактирование товара' : 'Добавление товара'}</h5>\n            </div>\n            <div className={'add-item-body'}>\n              <FormControl error={Boolean(touched.itemName && errors.itemName)}>\n                <FormLabel classes={{ root: classesLabel.root }} className={'labels'}>\n                  Название товара<span className={'red-star'}>*</span>\n                </FormLabel>\n                <OutlinedInput\n                  type=\"text\"\n                  variant=\"outlined\"\n                  notched={false}\n                  placeholder=\"Название товара\"\n                  multiline\n                  classes={{\n                    root: classesInput.root,\n                    input: classesInput.input,\n                  }}\n                  name={'itemName'}\n                  onChange={handleChange}\n                  onBlur={(event) => handleTrim(event, 'itemName')}\n                  value={itemName}\n                />\n                {getError(touched.itemName, errors.itemName)}\n              </FormControl>\n\n              <FormControl error={Boolean(touched.price && errors.price)}>\n                <FormLabel classes={{ root: classesLabel.root }} className={'labels'}>\n                  Стоимость товара<span className={'red-star'}>*</span>\n                </FormLabel>\n                <NumberFormat\n                  classesInput={classesInput}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  values={price}\n                  customInput={PriceFormatInput}\n                  format={priceFormat}\n                />\n                {getError(touched.price, errors.price)}\n              </FormControl>\n              <FormControl error={Boolean(touched.file && errors.file)} className={'upload-bnt-wrap'}>\n                <FormLabel classes={{ root: classesLabel.root }} className={'labels'}>\n                  Изображение<span className={'red-star'}>*</span>\n                </FormLabel>\n                <input\n                  accept=\".jpg,.jpeg,.png\"\n                  className={'upload-input'}\n                  id=\"contained-button-file\"\n                  multiple\n                  type=\"file\"\n                  name={'file'}\n                  onBlur={handleBlur}\n                  onChange={(event) => {\n                    const { files } = event.target;\n                    const file = getFileSchema(files.item(0));\n                    setFieldTouched('file', true, true);\n                    fileHandleChange(event);\n                    values.fileUrl = null; // при выборе картинки обнуляю ссылку на неё\n                    if (!file) {\n                      setFieldValue('file', undefined, true);\n                      values.fileUrl = editingProduct.fileUrl;\n                    } else {\n                      setFieldValue('file', file, true);\n                    }\n                  }}\n                />\n                <label className={'upload-bnt-label'} htmlFor=\"contained-button-file\">\n                  <ThemeProvider theme={themeUploadBtn}>\n                    <Button\n                      variant=\"contained\"\n                      component=\"span\"\n                      disableRipple={true}\n                      classes={{\n                        root: classesUploadBtn.root,\n                        label: classesUploadBtn.label,\n                      }}\n                      endIcon={<i className=\"fa fa-upload\" aria-hidden=\"true\" />}\n                    >\n                      {file === undefined || file === null ? (\n                        <div className={'upload-btn-name'}>Выберите изображение</div>\n                      ) : (\n                        file.file.name\n                      )}\n                    </Button>\n                  </ThemeProvider>\n                </label>\n                {getError(touched.file, errors.file?.file)}\n              </FormControl>\n              <div className={'thumb-wrapper img-thumbnail'}>\n                {fileUrl ? (\n                  <img src={fileUrl} alt={'изображение товара'} className={'thumb'} />\n                ) : (\n                  <Thumb file={file === undefined || file === null ? null : file.file} />\n                )}\n              </div>\n              <FormControl error={Boolean(touched.description && errors.description)}>\n                <FormLabel classes={{ root: classesLabel.root }} className={'labels'}>\n                  Описание<span className={'red-star'}>*</span>\n                </FormLabel>\n                <OutlinedInput\n                  type=\"text\"\n                  multiline={true}\n                  rows={5}\n                  inputProps={{ maxLength: 1000 }}\n                  variant=\"outlined\"\n                  notched={false}\n                  placeholder=\"Описание товара не должно превышать 1000 символов\"\n                  className={'add-item-textarea'}\n                  classes={{\n                    root: classesTextarea.root,\n                  }}\n                  name={'description'}\n                  onChange={handleChange}\n                  onBlur={(event) => handleTrim(event, 'description')}\n                  value={description}\n                />\n                {getError(touched.description, errors.description)}\n              </FormControl>\n            </div>\n            <AddPropertyToProduct\n              handleChange={handleChange}\n              touched={touched}\n              errors={errors}\n              handleBlur={handleBlur}\n              propertiesOfProduct={propertiesOfProduct}\n              properties={itemProperties}\n              getError={getError}\n              setFieldValue={setFieldValue}\n              setFieldTouched={setFieldTouched}\n              handleTrim={handleTrim}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default withRouter(AddItem);\n","import React, { useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { Spinner } from '../../components/spinner';\nimport { ErrorIndicator } from '../error-indicator';\nimport { withAuthRedirect } from '../../hoc';\nimport { AddItem } from './index';\n\nimport {\n  fetchProperties,\n  fetchProducts,\n  productsError,\n  productsSpinnerClose,\n  productsSpinnerOpen,\n  clearSelectedProduct,\n  fetchSelectedProduct,\n  createdProduct,\n  editedProduct,\n  resetNotifications,\n} from '../../store/actions';\n\nconst AddItemContainer = ({\n  fetchProperties,\n  fetchProducts,\n  productsError,\n  properties,\n  loadingProps,\n  errorProps,\n  loadingProducts,\n  errorProducts,\n  loadingEditingProduct,\n  errorEditingProduct,\n  editingProduct,\n  fetchSelectedProduct,\n  clearSelectedProduct,\n  createdProduct,\n  editedProduct,\n  productsSpinnerOpen,\n  productsSpinnerClose,\n  match,\n  resetNotifications,\n}) => {\n  const itemId = match.params.id;\n\n  useEffect(() => {\n    resetNotifications();\n    fetchProducts();\n    fetchProperties();\n    if (itemId) {\n      fetchSelectedProduct(itemId);\n    }\n    return () => clearSelectedProduct();\n  }, [itemId, resetNotifications, fetchProducts, fetchProperties, fetchSelectedProduct, clearSelectedProduct]);\n\n  const loadIndicator = useMemo(() => {\n    return loadingProps || (loadingEditingProduct && itemId);\n  }, [loadingProps, loadingEditingProduct, itemId]);\n\n  const errorIndicator = useMemo(() => {\n    return errorProps || errorProducts || (errorEditingProduct && itemId);\n  }, [errorProps, errorProducts, errorEditingProduct, itemId]);\n\n  if (errorIndicator) {\n    return <ErrorIndicator />;\n  }\n\n  if (loadIndicator) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      {loadingProducts && <Spinner />}\n      <AddItem\n        properties={properties}\n        productsError={productsError}\n        itemId={itemId}\n        editingProduct={editingProduct}\n        clearSelectedProduct={clearSelectedProduct}\n        createdProduct={createdProduct}\n        editedProduct={editedProduct}\n        productsSpinnerOpen={productsSpinnerOpen}\n        productsSpinnerClose={productsSpinnerClose}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    properties: state.properties.properties,\n    loadingProps: state.properties.loading,\n    errorProps: state.properties.error,\n    loadingProducts: state.products.loading,\n    errorProducts: state.products.error,\n    loadingEditingProduct: state.selectedProduct.loading,\n    errorEditingProduct: state.selectedProduct.error,\n    editingProduct: state.selectedProduct.selectedProduct,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchProperties,\n  fetchProducts,\n  productsError,\n  fetchSelectedProduct,\n  clearSelectedProduct,\n  createdProduct,\n  editedProduct,\n  productsSpinnerOpen,\n  productsSpinnerClose,\n  resetNotifications,\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, mapDispatchToProps))(AddItemContainer);\n","import * as yup from \"yup\";\r\n\r\nexport const productCardValidationSchema = yup.object().shape({\r\n    itemName: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\r\n    description: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\r\n    fileUrl: yup.string().typeError('Должно быть строкой').required('Обязательное поле'),\r\n    price: yup\r\n        .number()\r\n        .typeError('Должно быть числом')\r\n        .integer('Должно быть целым числом')\r\n        .required('Обязательное поле'),\r\n    propertiesOfProduct: yup.array().of(\r\n        yup.object().shape({\r\n            id: yup.string(),\r\n            propertyName: yup.string(),\r\n            propertyType: yup.string(),\r\n            propertyValue: yup.string(),\r\n        }),\r\n    ),\r\n});","import React, { useCallback, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { useLoginButtonStyles, useProductCardItemSelectStyles } from '../../styles/customizing-material-ui-components';\nimport { productCardValidationSchema } from './product-card-validation-shema';\n\nimport './product-card.scss';\n\nconst ProductCard = ({ selectedProduct, clearSelectedProduct, logIn }) => {\n  const classes = useLoginButtonStyles();\n  const classesSelect = useProductCardItemSelectStyles();\n\n  const { itemName, fileUrl, description, price, propertiesOfProduct } = selectedProduct;\n\n  const formik = useFormik({\n    initialValues: {\n      itemName: itemName,\n      description: description,\n      fileUrl: fileUrl,\n      price: price,\n      propertiesOfProduct: propertiesOfProduct ? propertiesOfProduct : [],\n    },\n    validationSchema: productCardValidationSchema,\n    onSubmit: async (values) => {\n      await new Promise((r) => setTimeout(r, 500));\n      console.log(values);\n    },\n    validateOnBlur: true,\n  });\n\n  const { values, handleChange, handleBlur, isValid, handleSubmit, setFieldValue } = formik;\n\n  const setFirstValuesFromDropDowns = useCallback(\n    (property, index) => {\n      if (property.propertyType === 'Dropdown') {\n        return setFieldValue(\n          `propertiesOfProduct.${index}.propertyValue`,\n          propertiesOfProduct[index].propertyValue[0].propertyValue,\n          false,\n        );\n      }\n    },\n    [propertiesOfProduct, setFieldValue],\n  );\n\n  useEffect(() => {\n    if (propertiesOfProduct) {\n      propertiesOfProduct.map(setFirstValuesFromDropDowns);\n    }\n  }, [propertiesOfProduct, setFirstValuesFromDropDowns]);\n\n  const renderMenuItems = (item, index) => {\n    const { propertyValue } = item;\n    return (\n      <MenuItem value={propertyValue} key={index}>\n        {propertyValue}\n      </MenuItem>\n    );\n  };\n\n  const renderPropertiesOfProduct = (property, index) => {\n    const { propertyName, propertyType, propertyValue } = property;\n    switch (propertyType) {\n      case 'Dropdown':\n        return (\n          <div key={index}>\n            <h4>{propertyName}</h4>\n            <FormControl variant=\"outlined\" className={classesSelect.formControl}>\n              <Select\n                classes={{\n                  root: classesSelect.root,\n                  icon: classesSelect.icon,\n                }}\n                name={`propertiesOfProduct.${index}.propertyValue`}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                notched={false}\n                value={\n                  Array.isArray(values.propertiesOfProduct[index].propertyValue)\n                    ? ''\n                    : values.propertiesOfProduct[index].propertyValue\n                }\n              >\n                {propertyValue.map(renderMenuItems)}\n              </Select>\n            </FormControl>\n          </div>\n        );\n      case 'Number':\n        return (\n          <div key={index}>\n            <h4>{propertyName}</h4>\n            <p>{propertyValue}</p>\n          </div>\n        );\n      case 'String':\n        return (\n          <div key={index}>\n            <h4>{propertyName}</h4>\n            <p>{propertyValue}</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={'product-card'}>\n      <div className={'product-card-bordered-wrap'}>\n        <div className={'product-card-wrap'}>\n          {logIn ? (\n            <div className={'link'}>\n              <Link to={'/'} onClick={clearSelectedProduct}>\n                Вернуться\n              </Link>\n            </div>\n          ) : null}\n          <form onSubmit={handleSubmit} className={'product-card-wrapper'}>\n            <div className={'header-items-row'}>\n              <div className={'item-image'}>\n                <img src={fileUrl} alt={'product'} />\n              </div>\n              <div className={'item-information'}>\n                <h3>{itemName}</h3>\n                <p>{description}</p>\n              </div>\n            </div>\n            <div className={'bottom-items-row'}>\n              <div className={'item-properties'}>\n                {propertiesOfProduct && propertiesOfProduct.map(renderPropertiesOfProduct)}\n                <h4>Стоимость</h4>\n                <span className={'price'}>{price.toLocaleString('ru-RU')}$</span>\n              </div>\n              <div className={'button-wrap'}>\n                <Button\n                  classes={{\n                    root: classes.root,\n                    label: classes.label,\n                  }}\n                  type={'submit'}\n                  disabled={!isValid}\n                  onClick={handleSubmit}\n                >\n                  Беру!!!\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { ProductCard };\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Spinner } from '../../components/spinner';\nimport { ErrorIndicator } from '../error-indicator';\nimport { ProductCard } from './product-card';\nimport { clearSelectedProduct, fetchSelectedProduct, resetNotifications } from '../../store/actions';\n\nconst ProductCardContainer = ({\n  match,\n  selectedProduct,\n  loading,\n  error,\n  fetchSelectedProduct,\n  clearSelectedProduct,\n  logIn,\n  resetNotifications,\n}) => {\n  const itemId = match.params.id;\n\n  useEffect(() => {\n    resetNotifications();\n    fetchSelectedProduct(itemId);\n    return () => clearSelectedProduct();\n  }, [itemId, resetNotifications, fetchSelectedProduct, clearSelectedProduct]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  return <ProductCard selectedProduct={selectedProduct} clearSelectedProduct={clearSelectedProduct} logIn={logIn} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.selectedProduct.loading,\n    error: state.selectedProduct.error,\n    selectedProduct: state.selectedProduct.selectedProduct,\n    logIn: state.isAuth.logIn,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchSelectedProduct,\n  clearSelectedProduct,\n  resetNotifications,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCardContainer);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { MainContainer } from '../../pages/main';\nimport { LoginContainer } from '../../pages/login';\nimport { RegistrationContainer } from '../../pages/registration';\nimport { AddPropertyContainer } from '../../pages/add-property';\nimport { AddItemContainer } from '../../pages/add-item';\nimport { ProductCardContainer } from '../../pages/product-card';\nimport { ErrorIndicator } from '../../pages/error-indicator';\n\nimport './app.scss';\n\nconst App = () => {\n  return (\n    <div className={'app'}>\n      <div className={'wrapper'}>\n        <Switch>\n          <Route path={'/'} component={MainContainer} exact />\n          <Route path={'/property-list'} component={MainContainer} />\n          <Route path={'/add-property'} component={AddPropertyContainer} />\n          <Route path={'/item-card/:id'} component={ProductCardContainer} />\n          <Route path={'/add-item/:id?'} component={AddItemContainer} />\n          <Route path={'/login'} component={LoginContainer} />\n          <Route path={'/registration'} component={RegistrationContainer} />\n          <Route render={() => <ErrorIndicator />} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport { App };\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { App } from './index';\nimport { userIsAuth } from '../../store/actions';\n\nconst AppContainer = ({ userIsAuth }) => {\n  useEffect(() => {\n    userIsAuth();\n  }, [userIsAuth]);\n\n  return <App />;\n};\n\nconst mapDispatchToProps = {\n  userIsAuth,\n};\n\nexport default connect(null, mapDispatchToProps)(AppContainer);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst Notifications = ({ history, showNotification, path, deletedItem, isEditing, closeNotifications }) => {\n  const backToListItems = (path) => {\n    return history.push(`${path}`);\n  };\n\n  const handleClose = (event, reason, dontBack) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    closeNotifications();\n\n    if (!dontBack) backToListItems(path);\n  };\n\n  if (isEditing && !deletedItem && path === '/') {\n    return (\n      <Snackbar open={showNotification} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Товар успешно отредактирован! Вы будете автоматически перенаправлены в список товаров.\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  if (!isEditing && !deletedItem && path === '/') {\n    return (\n      <Snackbar open={showNotification} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Товар успешно добавлен! Вы будете автоматически перенаправлены в список товаров.\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  if (!isEditing && !deletedItem && path === '/property-list') {\n    return (\n      <Snackbar open={showNotification} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Свойство успешно добавлено! Вы будете автоматически перенаправлены в список добавленных свойств.\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  if (deletedItem) {\n    return (\n      <Snackbar\n        open={showNotification}\n        autoHideDuration={4000}\n        onClose={(event, reason) => handleClose(event, reason, true)}\n      >\n        <Alert onClose={(event, reason) => handleClose(event, reason, true)} severity=\"success\">\n          {deletedItem === 'товар' ? 'Товар успешно удален' : null}\n          {deletedItem === 'свойство' ? 'Свойство успешно удалено' : null}\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  return null;\n};\n\nexport default withRouter(Notifications);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Notifications from './notifications';\nimport { closeNotifications } from '../../store/actions';\n\nconst NotificationsContainer = ({ showNotification, path, isEditing, deletedItem, closeNotifications }) => {\n  return (\n    <Notifications\n      showNotification={showNotification}\n      path={path}\n      isEditing={isEditing}\n      deletedItem={deletedItem}\n      closeNotifications={closeNotifications}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    showNotification: state.notifications.showNotification,\n    path: state.notifications.path,\n    isEditing: state.notifications.isEditing,\n    deletedItem: state.notifications.deletedItem,\n  };\n};\n\nconst mapDispatchToProps = {\n  closeNotifications,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationsContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport store from '../src/store/store';\nimport { ErrorBoundary } from './components/error-boundary';\nimport { AppContainer } from './components/app';\nimport { NotificationsContainer } from './components/notifications';\nimport { theme } from './styles/customizing-material-ui-components';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <HashRouter>\n        <NotificationsContainer />\n        <ThemeProvider theme={theme}>\n          <AppContainer />\n        </ThemeProvider>\n      </HashRouter>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}